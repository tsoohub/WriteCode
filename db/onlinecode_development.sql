-- phpMyAdmin SQL Dump
-- version 4.3.11
-- http://www.phpmyadmin.net
--
-- Host: 127.0.0.1
-- Generation Time: Jul 25, 2017 at 10:05 PM
-- Server version: 5.6.24
-- PHP Version: 5.5.24

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;

--
-- Database: `onlinecode_development`
--

-- --------------------------------------------------------

--
-- Table structure for table `answers`
--

CREATE TABLE IF NOT EXISTS `answers` (
  `id` int(11) NOT NULL,
  `ans` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  `created_at` datetime DEFAULT NULL,
  `updated_at` datetime DEFAULT NULL,
  `question_id` int(11) DEFAULT NULL,
  `student_id` int(11) DEFAULT NULL,
  `picture` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL
) ENGINE=InnoDB AUTO_INCREMENT=58 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

--
-- Dumping data for table `answers`
--

INSERT INTO `answers` (`id`, `ans`, `created_at`, `updated_at`, `question_id`, `student_id`, `picture`) VALUES
(18, 'Тиймээ заавал шаардлагатай учир нь C# програмчлалын хэл нь хатуу өгөгдлийн төрөлтэй хэл шүү дээ. Тайлбар толь хэсгээс илүү тодорхой уншиж болно шүү. ', '2015-10-31 01:49:25', '2015-10-31 01:49:25', 12, 18, 'type_hierarchy_y9dafs.png'),
(19, 'Заавал бичнэ. Бичихгүй бол мэдээж алдаа гарна. Ер нь энгийнээр ойлговол чи тодорхой дүрэмтэй програмчлалын хэл дээр код бичиж байгаа учираас заавал өгөгдлийн төрөл шаардлагатай', '2015-10-31 01:55:43', '2015-10-31 01:55:43', 12, 18, NULL),
(20, 'Өгөгдлийн төрөл зарлахдаа дараах байдлаар оруулвал илүү тохиромжтой бөгөөд өөрөө хүссэн төрлөө олгох боломжтой.', '2015-10-31 03:26:31', '2015-10-31 03:26:31', 12, 18, 'Image_2.png'),
(23, 'Наад тань HTML код байна энд зөвхөн C# код бичих боломжтой бөлгөө', '2015-11-01 08:55:37', '2015-11-01 08:55:37', 13, 19, 'asf.PNG'),
(24, 'kdsgnlskdgkjlskldjgkjlsdgsdgs sdg sd ', '2015-11-01 12:27:30', '2015-11-01 12:27:30', 13, 20, NULL),
(25, 'Кодын эдитор дээрээ кодоо бич ишдээ', '2015-11-02 09:37:57', '2015-11-02 09:37:57', 13, 27, 'bla.png'),
(26, 'Хувьсагчаа зарлахдаа дараах байдлаа зарла', '2015-11-03 13:16:23', '2015-11-03 13:16:23', 14, 27, '687fO.png'),
(27, 'өгөгдлийн төрөл хувьсагчийн нэр', '2015-11-03 14:26:14', '2015-11-03 14:26:14', 14, 30, 'shwo.jpg'),
(28, 'Эдитор дээрээ бичээ.', '2015-11-04 03:24:40', '2015-11-04 03:24:40', 13, 30, '09-code-editor-in-the-cloud.jpg'),
(30, 'Hello world', '2015-11-08 02:49:36', '2015-11-08 02:49:36', 14, 32, NULL),
(47, '[хувсагчийн төрөл] [хувьсагчий нэр] = [анхны утга];', '2015-11-08 04:05:52', '2015-11-08 04:05:52', 12, 32, NULL),
(48, 'End bich\r\n', '2015-11-12 09:06:19', '2015-11-12 09:06:19', 13, 30, NULL),
(49, 'Хувьсагч зарлах', '2015-11-12 13:47:51', '2015-11-12 13:47:51', 14, 35, NULL),
(50, 'torol ner utga;', '2015-11-21 13:37:23', '2015-11-21 13:37:23', 14, 32, NULL),
(51, 'Энд бичнэ', '2015-11-24 03:38:13', '2015-11-24 03:38:13', 13, 47, NULL),
(52, 'Hello my name is Tsoodol.', '2015-11-28 07:33:16', '2015-11-28 07:33:16', 13, 47, NULL),
(53, 'Hello world', '2015-11-30 14:50:34', '2015-11-30 14:50:34', 13, 27, NULL),
(54, 'anhnii_too anhnii_too anhnii_too anhnii_too anhnii_too anhnii_too anhnii_too anhnii_too anhnii_too anhnii_too anhnii_too anhnii_too anhnii_too anhnii_tooanhnii_too  anhnii_too anhnii_too  ', '2015-11-30 14:51:12', '2015-11-30 14:51:12', 13, 27, NULL),
(55, 'Ymar pro sda be?', '2016-11-04 22:48:27', '2016-11-04 22:48:27', 17, 59, NULL),
(56, 'Энэ бол олон зургийн тест юмаа.', '2016-11-04 22:50:26', '2016-11-04 22:50:26', 12, 59, 'Fury-Movie-2014-HD-Wallpapers-Download-Free-01.jpg'),
(57, 'skjldghsdgjksdhgkjshdgkjsldhgldskj', '2016-11-14 12:54:01', '2016-11-14 12:54:01', 14, 60, NULL);

-- --------------------------------------------------------

--
-- Table structure for table `badges`
--

CREATE TABLE IF NOT EXISTS `badges` (
  `id` int(11) NOT NULL,
  `created_at` datetime DEFAULT NULL,
  `updated_at` datetime DEFAULT NULL,
  `student_id` int(11) DEFAULT NULL,
  `chapter_id` int(11) DEFAULT NULL
) ENGINE=InnoDB AUTO_INCREMENT=99 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

--
-- Dumping data for table `badges`
--

INSERT INTO `badges` (`id`, `created_at`, `updated_at`, `student_id`, `chapter_id`) VALUES
(1, '2015-11-01 08:42:50', '2015-11-01 08:42:50', 19, 7),
(2, '2015-11-01 08:43:02', '2015-11-01 08:43:02', 19, 7),
(3, '2015-11-01 08:43:06', '2015-11-01 08:43:06', 19, 7),
(4, '2015-11-03 12:56:53', '2015-11-03 12:56:53', 29, 6),
(5, '2015-11-03 12:57:02', '2015-11-03 12:57:02', 29, 6),
(6, '2015-11-03 12:57:15', '2015-11-03 12:57:15', 29, 6),
(7, '2015-11-03 12:57:32', '2015-11-03 12:57:32', 29, 6),
(11, '2015-11-04 07:21:49', '2015-11-04 07:21:49', 30, 6),
(12, '2015-11-04 07:22:03', '2015-11-04 07:22:03', 30, 6),
(13, '2015-11-04 07:25:49', '2015-11-04 07:25:49', 30, 6),
(14, '2015-11-04 07:26:35', '2015-11-04 07:26:35', 30, 6),
(15, '2015-11-04 07:26:40', '2015-11-04 07:26:40', 30, 6),
(16, '2015-11-04 07:26:51', '2015-11-04 07:26:51', 30, 6),
(17, '2015-11-04 07:27:00', '2015-11-04 07:27:00', 30, 6),
(18, '2015-11-06 02:15:24', '2015-11-06 02:15:24', 31, 6),
(19, '2015-11-06 02:16:27', '2015-11-06 02:16:27', 31, 6),
(20, '2015-11-06 02:16:37', '2015-11-06 02:16:37', 31, 6),
(21, '2015-11-06 02:28:33', '2015-11-06 02:28:33', 31, 9),
(22, '2015-11-06 02:28:37', '2015-11-06 02:28:37', 31, 9),
(23, '2015-11-06 02:28:45', '2015-11-06 02:28:45', 31, 9),
(24, '2015-11-06 02:28:50', '2015-11-06 02:28:50', 31, 9),
(25, '2015-11-06 02:41:26', '2015-11-06 02:41:26', 31, 9),
(26, '2015-11-06 02:42:49', '2015-11-06 02:42:49', 31, 9),
(27, '2015-11-06 02:43:50', '2015-11-06 02:43:50', 31, 9),
(28, '2015-11-06 02:46:32', '2015-11-06 02:46:32', 31, 9),
(29, '2015-11-06 03:59:13', '2015-11-06 03:59:13', 32, 6),
(30, '2015-11-06 04:01:36', '2015-11-06 04:01:36', 32, 7),
(31, '2015-11-06 04:03:32', '2015-11-06 04:03:32', 32, 8),
(32, '2015-11-06 04:06:42', '2015-11-06 04:06:42', 32, 9),
(39, '2015-11-07 10:50:48', '2015-11-07 10:50:48', 27, 6),
(40, '2015-11-13 08:22:22', '2015-11-13 08:22:22', 27, 7),
(41, '2015-11-13 08:25:16', '2015-11-13 08:25:16', 27, 8),
(42, '2015-11-17 15:28:07', '2015-11-17 15:28:07', 36, 7),
(43, '2015-11-17 15:32:25', '2015-11-17 15:32:25', 36, 8),
(44, '2015-11-17 15:41:44', '2015-11-17 15:41:44', 36, 9),
(45, '2015-11-17 15:45:16', '2015-11-17 15:45:16', 36, 6),
(46, '2015-11-18 15:22:54', '2015-11-18 15:22:54', 30, 9),
(47, '2015-11-21 10:29:06', '2015-11-21 10:29:06', 32, 11),
(48, '2015-11-23 02:25:49', '2015-11-23 02:25:49', 40, 7),
(49, '2015-11-23 02:36:58', '2015-11-23 02:36:58', 41, 7),
(50, '2015-11-23 05:03:30', '2015-11-23 05:03:30', 42, 7),
(51, '2015-11-23 05:10:47', '2015-11-23 05:10:47', 43, 7),
(52, '2015-11-23 05:23:29', '2015-11-23 05:23:29', 44, 6),
(53, '2015-11-23 05:32:06', '2015-11-23 05:32:06', 45, 6),
(54, '2015-11-23 05:42:39', '2015-11-23 05:42:39', 45, 7),
(55, '2015-11-23 05:43:30', '2015-11-23 05:43:30', 45, 8),
(56, '2015-11-23 06:04:57', '2015-11-23 06:04:57', 45, 9),
(57, '2015-11-23 13:48:22', '2015-11-23 13:48:22', 46, 6),
(58, '2015-11-23 13:48:41', '2015-11-23 13:48:41', 46, 7),
(59, '2015-11-23 13:49:06', '2015-11-23 13:49:06', 46, 8),
(60, '2015-11-23 13:50:48', '2015-11-23 13:50:48', 46, 9),
(61, '2015-11-24 03:34:43', '2015-11-24 03:34:43', 47, 6),
(62, '2015-11-24 03:40:53', '2015-11-24 03:40:53', 47, 7),
(63, '2015-11-25 12:45:29', '2015-11-25 12:45:29', 47, 8),
(64, '2015-11-29 01:53:59', '2015-11-29 01:53:59', 48, 6),
(65, '2015-11-29 01:54:45', '2015-11-29 01:54:45', 48, 7),
(66, '2015-11-29 01:55:29', '2015-11-29 01:55:29', 48, 8),
(70, '2015-12-01 02:36:50', '2015-12-01 02:36:50', 51, 6),
(71, '2015-12-01 02:39:53', '2015-12-01 02:39:53', 51, 7),
(72, '2015-12-01 02:41:49', '2015-12-01 02:41:49', 51, 8),
(73, '2015-12-01 02:57:36', '2015-12-01 02:57:36', 51, 9),
(74, '2015-12-01 03:11:03', '2015-12-01 03:11:03', 52, 6),
(75, '2015-12-01 03:11:20', '2015-12-01 03:11:20', 52, 7),
(76, '2015-12-01 03:11:47', '2015-12-01 03:11:47', 52, 8),
(77, '2015-12-01 03:14:14', '2015-12-01 03:14:14', 52, 9),
(78, '2015-12-12 05:52:29', '2015-12-12 05:52:29', 55, 6),
(79, '2015-12-12 06:05:04', '2015-12-12 06:05:04', 55, 7),
(80, '2015-12-14 08:10:44', '2015-12-14 08:10:44', 55, 8),
(81, '2015-12-22 15:07:07', '2015-12-22 15:07:07', 27, 9),
(82, '2015-12-22 15:15:44', '2015-12-22 15:15:44', 56, 6),
(83, '2015-12-22 15:16:29', '2015-12-22 15:16:29', 56, 7),
(84, '2015-12-22 15:16:38', '2015-12-22 15:16:38', 56, 8),
(85, '2015-12-27 05:07:45', '2015-12-27 05:07:45', 57, 6),
(86, '2015-12-27 05:08:21', '2015-12-27 05:08:21', 57, 7),
(87, '2015-12-27 05:08:47', '2015-12-27 05:08:47', 57, 8),
(88, '2015-12-27 05:09:59', '2015-12-27 05:09:59', 57, 9),
(89, '2016-01-03 15:54:35', '2016-01-03 15:54:35', 55, 9),
(90, '2016-01-04 10:52:50', '2016-01-04 10:52:50', 58, 6),
(91, '2016-01-04 10:57:57', '2016-01-04 10:57:57', 58, 7),
(92, '2016-01-04 10:58:29', '2016-01-04 10:58:29', 58, 8),
(93, '2016-01-04 13:41:24', '2016-01-04 13:41:24', 58, 9),
(94, '2016-01-07 13:41:25', '2016-01-07 13:41:25', 35, 6),
(95, '2016-01-22 06:27:20', '2016-01-22 06:27:20', 49, 6),
(96, '2016-11-04 23:21:43', '2016-11-04 23:21:43', 59, 6),
(97, '2016-11-04 23:22:52', '2016-11-04 23:22:52', 59, 7),
(98, '2016-11-11 09:06:44', '2016-11-11 09:06:44', 59, 8);

-- --------------------------------------------------------

--
-- Table structure for table `chapters`
--

CREATE TABLE IF NOT EXISTS `chapters` (
  `id` int(11) NOT NULL,
  `name` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  `badge_name` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  `badge_image` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  `created_at` datetime DEFAULT NULL,
  `updated_at` datetime DEFAULT NULL,
  `organizer_id` int(11) DEFAULT NULL,
  `attachment` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  `description` text COLLATE utf8_unicode_ci
) ENGINE=InnoDB AUTO_INCREMENT=12 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

--
-- Dumping data for table `chapters`
--

INSERT INTO `chapters` (`id`, `name`, `badge_name`, `badge_image`, `created_at`, `updated_at`, `organizer_id`, `attachment`, `description`) VALUES
(6, 'Өгөгдлийн төрөл', 'Role - Ажиглагч', NULL, '2015-10-24 01:44:06', '2015-11-17 02:24:21', 10, 'b1.png', 'C# програмчлалын хэл нь хатуу өгөгдлийн төрөлтэй бөгөөд хувьсагч зарлахдаа заавал өгөгдлийн төрлийн зааж өгдөг. Ихэнх гардаг нь алдаа гэвэл төрөл хувиргалытн алдаа бөгөөд нэг төрлөөс нөгөө төрөлрүү хөрвүүлэхэд алдаа гардаг. Тиймээс тохиромжгүй төрлүүдийг хооронд нь хөрвүүлэхээс зайлс хийх хэрэгтэй байдаг. Өгөгдлийн төрөл нь int, double, String, char, float байна.'),
(7, 'Хувьсагчийн зарлагаа', 'Junior', NULL, '2015-10-24 01:46:11', '2015-11-17 02:24:35', 10, 'b2.png', 'Хувьсагч гэдэг нь тодорхой төрлийн өгөгдөл хадгалах сав гэж ойлгож болно. Жишээ нь бүхэл тоог хадгалах бол int төрлийн хувьсагч, бутархай тоог хадгалах бол double төрлийн хувьсагч, тэмдэгт мөр хадгалах бол String төрлийн хувьсагч зарлах ёстой. Хувьсагч зарлахдаа дараах загвараар зарлах ёстой. Үүнд өгөгдлийн төрөл хувьсагчийн нэр [=] [анхны утга]. Үүнд жишээ дурдвал int too; int too = 12;'),
(8, 'Нөхцөл шалгах оператор', 'Specialist', NULL, '2015-10-24 01:47:11', '2015-11-17 02:24:45', 10, 'b3.png', 'Нөхцөл шалгах оператор гэдэг нь тодорхой нөхцөл биелж байгаа эсэхийг шалгахад түгээмэл ашиглагдана. Жишээ нь Хэрвээ гадаа бороо орж байвал зоонтог авах хэрэгтэй. Үүнд бороо орж байгаа нь үнэн бол зоонтог авах гэсэн үйлдлийг хийж байна.'),
(9, 'For давталт', 'Senior', NULL, '2015-10-24 01:48:22', '2015-11-17 02:24:53', 10, 'b4.png', 'Програмчлалын хэлэнд давталт гэдэг нь нэг зүйлийг олон удаа давтаж хийхийг хэлдэг билээ. C# хэлэнд For давталт түгээмэл ашиглагддаг бөгөөд үүнд ихэвлчэн тодорхой урьдчилсан нөхцөл бүхий давталт юмаа. Үүнийг ашиглахдаа for [хувьсагчийн зарлагаа эсвэл утга олголт] [нөхцөл шалгах хэсэг] [илэрхийлэл] тэмплэйтийн дагуу ашиглана.'),
(10, 'While давталт', 'Technical Lead', NULL, '2015-10-24 01:49:12', '2015-11-17 02:25:01', 10, 'b5.png', 'While давталтыг ямар нөхцөл биелэгдэх нь тодорхойгүй нөхцөлд ашиглаж болно. Үүнд жишээлбэл i тоог эерэг утгатай хичнээн тоо хүртэл өсгөж болох бол энэ давталтыг ашиглахан тохиромжтой юм. Do while давталтыг дараах нөхцөлт давталт гэж нэрлэдэг бөгөөд гол ялгаа нь нөхцөлөө дараа нь давтадагт оршино.'),
(11, 'Функц зарлага ба ашиглалт', 'Expert', NULL, '2015-10-24 01:50:32', '2015-11-17 02:25:09', 10, 'b6.png', 'Функц нь нэг болон олон стэйтментүүдийг агуулсан бүлэг код юм. Функцыг ихэвчлэн олон давтагдаж байгаа үйлдлүүдийг багцлахад ашигладаг бөгөөд хичнээн удаа дуудаж ашиглаж болно. Функц зарлахдаа [буцаах утгын төрөл] [функцын нэр] () { [ програмын кодын муж ] }.');

-- --------------------------------------------------------

--
-- Table structure for table `completeds`
--

CREATE TABLE IF NOT EXISTS `completeds` (
  `id` int(11) NOT NULL,
  `take_score` int(11) DEFAULT NULL,
  `isview` tinyint(1) DEFAULT NULL,
  `created_at` datetime DEFAULT NULL,
  `updated_at` datetime DEFAULT NULL,
  `student_id` int(11) DEFAULT NULL,
  `lesson_id` int(11) DEFAULT NULL
) ENGINE=InnoDB AUTO_INCREMENT=370 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

--
-- Dumping data for table `completeds`
--

INSERT INTO `completeds` (`id`, `take_score`, `isview`, `created_at`, `updated_at`, `student_id`, `lesson_id`) VALUES
(8, NULL, NULL, '2015-10-13 01:01:17', '2015-10-13 01:01:17', 2, 1),
(9, NULL, NULL, '2015-10-16 03:39:23', '2015-10-16 03:39:23', 6, 1),
(11, NULL, NULL, '2015-10-17 03:54:50', '2015-10-17 03:54:50', 8, 1),
(13, 65, 1, '2015-10-19 23:22:17', '2015-10-19 23:22:17', 2, 15),
(14, 68, 1, '2015-10-20 00:18:59', '2015-10-20 00:18:59', 2, 16),
(15, 68, 1, '2015-10-20 00:18:59', '2015-10-20 00:18:59', 2, 20),
(16, 30, 1, '2015-10-20 01:58:08', '2015-10-20 01:58:08', 2, 20),
(17, NULL, NULL, '2015-10-20 02:46:14', '2015-10-20 02:46:14', 7, 1),
(18, 60, 1, '2015-10-20 02:48:30', '2015-10-20 02:48:30', 7, 1),
(19, 65, 1, '2015-10-20 02:52:50', '2015-10-20 02:52:50', 7, 15),
(20, 68, 1, '2015-10-20 02:53:06', '2015-10-20 02:53:06', 7, 16),
(21, 68, 1, '2015-10-20 02:53:21', '2015-10-20 02:53:21', 7, 17),
(27, 250, 1, '2015-10-22 12:26:15', '2015-10-22 12:26:15', 2, 26),
(28, 250, 1, '2015-10-22 12:26:17', '2015-10-22 12:26:17', 2, 26),
(29, 250, 1, '2015-10-22 12:26:17', '2015-10-22 12:26:17', 2, 26),
(30, 250, 1, '2015-10-22 12:26:18', '2015-10-22 12:26:18', 2, 26),
(31, 250, 1, '2015-10-22 12:26:18', '2015-10-22 12:26:18', 2, 26),
(32, 250, 1, '2015-10-22 12:26:18', '2015-10-22 12:26:18', 2, 26),
(33, 250, 1, '2015-10-22 12:36:27', '2015-10-22 12:36:27', 2, 26),
(34, 250, 1, '2015-10-22 12:36:28', '2015-10-22 12:36:28', 2, 26),
(35, 250, 1, '2015-10-22 12:36:28', '2015-10-22 12:36:28', 2, 26),
(36, 250, 1, '2015-10-22 12:36:29', '2015-10-22 12:36:29', 2, 26),
(37, 250, 1, '2015-10-22 12:36:29', '2015-10-22 12:36:29', 2, 26),
(38, 250, 1, '2015-10-22 12:36:29', '2015-10-22 12:36:29', 2, 26),
(39, 250, 1, '2015-10-22 12:38:36', '2015-10-22 12:38:36', 2, 26),
(40, 250, 1, '2015-10-22 13:08:00', '2015-10-22 13:08:00', 2, 26),
(41, 250, 1, '2015-10-22 13:08:04', '2015-10-22 13:08:04', 2, 26),
(42, 250, 1, '2015-10-22 13:08:07', '2015-10-22 13:08:07', 2, 26),
(43, 250, 1, '2015-10-22 13:12:16', '2015-10-22 13:12:16', 2, 26),
(44, 250, 1, '2015-10-22 13:12:17', '2015-10-22 13:12:17', 2, 26),
(45, 250, 1, '2015-10-22 13:12:18', '2015-10-22 13:12:18', 2, 26),
(46, 250, 1, '2015-10-22 13:12:18', '2015-10-22 13:12:18', 2, 26),
(47, 250, 1, '2015-10-22 13:12:18', '2015-10-22 13:12:18', 2, 26),
(48, 250, 1, '2015-10-22 13:12:18', '2015-10-22 13:12:18', 2, 26),
(49, 250, 1, '2015-10-22 13:12:56', '2015-10-22 13:12:56', 2, 26),
(50, 250, 1, '2015-10-22 13:12:58', '2015-10-22 13:12:58', 2, 26),
(51, 250, 1, '2015-10-22 13:12:59', '2015-10-22 13:12:59', 2, 26),
(52, 250, 1, '2015-10-22 13:12:59', '2015-10-22 13:12:59', 2, 26),
(53, 250, 1, '2015-10-22 13:12:59', '2015-10-22 13:12:59', 2, 26),
(54, 250, 1, '2015-10-22 13:12:59', '2015-10-22 13:12:59', 2, 26),
(55, 250, 1, '2015-10-22 13:12:59', '2015-10-22 13:12:59', 2, 26),
(56, 250, 1, '2015-10-22 13:12:59', '2015-10-22 13:12:59', 2, 26),
(57, 250, 1, '2015-10-22 13:17:48', '2015-10-22 13:17:48', 2, 26),
(58, NULL, NULL, '2015-10-22 13:24:00', '2015-10-22 13:24:00', 9, 1),
(59, 250, 1, '2015-10-22 16:06:42', '2015-10-22 16:06:42', 9, 26),
(60, 250, 1, '2015-10-22 16:22:46', '2015-10-22 16:22:46', 9, 26),
(61, 400, 1, '2015-10-23 00:45:03', '2015-10-23 00:45:03', 9, 27),
(62, 400, 1, '2015-10-23 03:12:55', '2015-10-23 03:12:55', 9, 27),
(63, NULL, NULL, '2015-10-24 02:18:19', '2015-10-24 02:18:19', 10, 15),
(64, NULL, NULL, '2015-10-24 02:37:48', '2015-10-24 02:37:48', 11, 15),
(65, 400, 1, '2015-10-24 04:44:47', '2015-10-24 04:44:47', 9, 27),
(66, 400, 1, '2015-10-25 07:01:05', '2015-10-25 07:01:05', 9, 27),
(67, NULL, NULL, '2015-10-25 07:02:17', '2015-10-25 07:02:17', 12, 15),
(68, NULL, NULL, '2015-10-26 02:16:05', '2015-10-26 02:16:05', 13, 25),
(69, 480, 1, '2015-10-26 02:33:42', '2015-10-26 02:33:42', 13, 25),
(70, 250, 1, '2015-10-26 02:34:30', '2015-10-26 02:34:30', 13, 26),
(71, 400, 1, '2015-10-26 02:36:24', '2015-10-26 02:36:24', 13, 27),
(72, NULL, NULL, '2015-10-26 07:41:26', '2015-10-26 07:41:26', 14, 25),
(73, 480, 1, '2015-10-26 13:23:39', '2015-10-26 13:23:39', 14, 25),
(74, 250, 1, '2015-10-26 13:25:44', '2015-10-26 13:25:44', 14, 26),
(75, 250, 1, '2015-10-27 03:27:03', '2015-10-27 03:27:03', 14, 26),
(76, NULL, NULL, '2015-10-27 11:16:05', '2015-10-27 11:16:05', 15, 25),
(77, 480, 1, '2015-10-27 13:57:58', '2015-10-27 13:57:58', 15, 25),
(78, NULL, 1, '2015-10-27 16:32:34', '2015-10-27 16:32:34', 15, NULL),
(79, NULL, NULL, '2015-10-27 16:41:30', '2015-10-27 16:41:30', 16, 25),
(80, NULL, 1, '2015-10-28 04:22:04', '2015-10-28 04:22:04', 16, NULL),
(81, NULL, NULL, '2015-10-28 04:26:29', '2015-10-28 04:26:29', 17, 25),
(82, NULL, NULL, '2015-10-29 15:36:54', '2015-10-29 15:36:54', 18, 25),
(83, NULL, NULL, '2015-11-01 05:54:50', '2015-11-01 05:54:50', 19, 25),
(84, NULL, 1, '2015-11-01 08:42:28', '2015-11-01 08:42:28', 19, 25),
(85, NULL, 1, '2015-11-01 08:43:06', '2015-11-01 08:43:06', 19, 26),
(86, NULL, 1, '2015-11-01 08:45:07', '2015-11-01 08:45:07', 19, 27),
(87, NULL, NULL, '2015-11-01 12:25:37', '2015-11-01 12:25:37', 20, 22),
(88, NULL, NULL, '2015-11-02 08:44:04', '2015-11-02 08:44:04', 21, 22),
(89, NULL, NULL, '2015-11-02 08:53:23', '2015-11-02 08:53:23', 22, 22),
(90, NULL, NULL, '2015-11-02 09:08:39', '2015-11-02 09:08:39', 23, 22),
(91, NULL, NULL, '2015-11-02 09:22:55', '2015-11-02 09:22:55', 26, 22),
(93, NULL, NULL, '2015-11-02 09:26:53', '2015-11-02 09:26:53', 28, 22),
(94, NULL, NULL, '2015-11-02 12:46:51', '2015-11-02 12:46:51', 29, 22),
(96, NULL, 1, '2015-11-03 12:53:03', '2015-11-03 12:53:03', 29, 22),
(97, NULL, 1, '2015-11-03 12:56:30', '2015-11-03 12:56:30', 29, 23),
(98, NULL, 1, '2015-11-03 12:57:32', '2015-11-03 12:57:32', 29, 24),
(99, NULL, 1, '2015-11-03 13:03:01', '2015-11-03 13:03:01', 29, 25),
(100, NULL, 1, '2015-11-03 13:06:35', '2015-11-03 13:06:35', 29, 26),
(101, NULL, 1, '2015-11-03 13:08:49', '2015-11-03 13:08:49', 29, 27),
(102, NULL, 1, '2015-11-03 13:10:11', '2015-11-03 13:10:11', 29, 32),
(103, NULL, 1, '2015-11-03 13:10:14', '2015-11-03 13:10:14', 29, 32),
(104, NULL, 1, '2015-11-03 13:10:15', '2015-11-03 13:10:15', 29, 32),
(105, NULL, 1, '2015-11-03 13:10:15', '2015-11-03 13:10:15', 29, 32),
(106, NULL, 1, '2015-11-03 13:10:15', '2015-11-03 13:10:15', 29, 32),
(107, NULL, 1, '2015-11-03 13:10:15', '2015-11-03 13:10:15', 29, 32),
(108, NULL, 1, '2015-11-03 13:10:16', '2015-11-03 13:10:16', 29, 32),
(109, NULL, 1, '2015-11-03 13:10:16', '2015-11-03 13:10:16', 29, 32),
(110, NULL, 1, '2015-11-03 13:10:16', '2015-11-03 13:10:16', 29, 32),
(111, NULL, 1, '2015-11-03 13:10:16', '2015-11-03 13:10:16', 29, 32),
(122, NULL, NULL, '2015-11-04 03:26:43', '2015-11-04 03:26:43', 30, 22),
(123, NULL, 1, '2015-11-04 07:19:35', '2015-11-04 07:19:35', 30, 22),
(124, NULL, 1, '2015-11-04 07:19:52', '2015-11-04 07:19:52', 30, 23),
(125, NULL, 1, '2015-11-04 07:27:00', '2015-11-04 07:27:00', 30, 23),
(126, NULL, 1, '2015-11-04 07:59:13', '2015-11-04 07:59:13', 30, 23),
(127, NULL, 1, '2015-11-04 08:00:33', '2015-11-04 08:00:33', 30, 24),
(128, NULL, 1, '2015-11-05 16:44:34', '2015-11-05 16:44:34', 30, 24),
(129, NULL, 1, '2015-11-05 16:45:42', '2015-11-05 16:45:42', 30, 25),
(130, NULL, 1, '2015-11-05 16:46:11', '2015-11-05 16:46:11', 30, 26),
(131, NULL, 1, '2015-11-05 16:46:55', '2015-11-05 16:46:55', 30, 27),
(132, NULL, 1, '2015-11-05 16:47:16', '2015-11-05 16:47:16', 30, 32),
(133, NULL, 1, '2015-11-05 16:47:18', '2015-11-05 16:47:18', 30, 32),
(134, NULL, 1, '2015-11-05 16:47:18', '2015-11-05 16:47:18', 30, 32),
(135, NULL, 1, '2015-11-05 16:47:18', '2015-11-05 16:47:18', 30, 32),
(136, NULL, 1, '2015-11-05 16:47:19', '2015-11-05 16:47:19', 30, 32),
(137, NULL, 1, '2015-11-05 16:47:19', '2015-11-05 16:47:19', 30, 32),
(138, NULL, NULL, '2015-11-06 02:05:24', '2015-11-06 02:05:24', 31, 22),
(139, NULL, 1, '2015-11-06 02:06:12', '2015-11-06 02:06:12', 31, 22),
(140, NULL, 1, '2015-11-06 02:10:38', '2015-11-06 02:10:38', 31, 23),
(141, NULL, 1, '2015-11-06 02:16:37', '2015-11-06 02:16:37', 31, 24),
(142, NULL, 1, '2015-11-06 02:19:36', '2015-11-06 02:19:36', 31, 25),
(143, 0, 1, '2015-11-06 02:23:00', '2015-11-06 02:23:00', 31, 26),
(144, 400, 1, '2015-11-06 02:25:02', '2015-11-06 02:25:02', 31, 27),
(151, 200, 1, '2015-11-06 02:43:38', '2015-11-06 02:43:38', 31, 32),
(161, 128, 1, '2015-11-06 03:51:43', '2015-11-06 03:51:43', 32, 22),
(162, 160, 1, '2015-11-06 03:53:34', '2015-11-06 03:53:34', 32, 23),
(163, 190, 1, '2015-11-06 03:59:13', '2015-11-06 03:59:13', 32, 24),
(164, 480, 1, '2015-11-06 04:01:07', '2015-11-06 04:01:07', 32, 25),
(165, 250, 1, '2015-11-06 04:01:35', '2015-11-06 04:01:35', 32, 26),
(166, 160, 1, '2015-11-06 04:03:32', '2015-11-06 04:03:32', 32, 27),
(167, 550, 1, '2015-11-06 04:04:19', '2015-11-06 04:04:19', 32, 32),
(173, 480, 1, '2015-11-13 08:15:52', '2015-11-13 08:15:52', 27, 25),
(175, 400, 1, '2015-11-13 08:25:16', '2015-11-13 08:25:16', 27, 27),
(176, 890, 1, '2015-11-16 13:19:30', '2015-11-16 13:19:30', 32, 33),
(177, 128, 1, '2015-11-17 15:12:10', '2015-11-17 15:12:10', 36, 22),
(178, 160, 1, '2015-11-17 15:24:15', '2015-11-17 15:24:15', 36, 23),
(179, 190, 1, '2015-11-17 15:24:42', '2015-11-17 15:24:42', 36, 24),
(180, 480, 1, '2015-11-17 15:27:05', '2015-11-17 15:27:05', 36, 25),
(181, 250, 1, '2015-11-17 15:28:07', '2015-11-17 15:28:07', 36, 26),
(182, 400, 1, '2015-11-17 15:32:24', '2015-11-17 15:32:24', 36, 27),
(183, 550, 1, '2015-11-17 15:41:22', '2015-11-17 15:41:22', 36, 32),
(184, 890, 1, '2015-11-17 15:41:43', '2015-11-17 15:41:43', 36, 33),
(185, 602, 1, '2015-11-17 15:45:16', '2015-11-17 15:45:16', 36, 34),
(186, 890, 1, '2015-11-18 15:23:05', '2015-11-18 15:23:05', 30, 33),
(187, 602, 1, '2015-11-20 07:21:27', '2015-11-20 07:21:27', 32, 34),
(188, 128, 1, '2015-11-20 08:26:05', '2015-11-20 08:26:05', 37, 22),
(189, 160, 1, '2015-11-20 08:27:40', '2015-11-20 08:27:40', 37, 23),
(190, 190, 1, '2015-11-20 08:28:13', '2015-11-20 08:28:13', 37, 24),
(191, 10, 1, '2015-11-21 10:29:06', '2015-11-21 10:29:06', 32, 35),
(192, 15, 1, '2015-11-21 10:30:12', '2015-11-21 10:30:12', 32, 36),
(193, 10, 1, '2015-11-21 10:53:00', '2015-11-21 10:53:00', 32, 37),
(194, 15, 1, '2015-11-21 11:20:24', '2015-11-21 11:20:24', 32, 38),
(195, 20, 1, '2015-11-21 11:49:17', '2015-11-21 11:49:17', 32, 39),
(196, 128, 1, '2015-11-22 06:50:14', '2015-11-22 06:50:14', 38, 22),
(197, 602, 1, '2015-11-23 00:05:00', '2015-11-23 00:05:00', 30, 34),
(199, 0, 1, '2015-11-23 02:08:06', '2015-11-23 02:08:06', 40, 35),
(200, 15, 1, '2015-11-23 02:24:08', '2015-11-23 02:24:08', 40, 36),
(201, 10, 1, '2015-11-23 02:24:39', '2015-11-23 02:24:39', 40, 37),
(202, 15, 1, '2015-11-23 02:25:15', '2015-11-23 02:25:15', 40, 38),
(203, 20, 1, '2015-11-23 02:25:49', '2015-11-23 02:25:49', 40, 39),
(204, 15, 1, '2015-11-23 02:26:50', '2015-11-23 02:26:50', 40, 27),
(205, 0, 1, '2015-11-23 02:34:40', '2015-11-23 02:34:40', 41, 35),
(206, 15, 1, '2015-11-23 02:35:22', '2015-11-23 02:35:22', 41, 36),
(207, 10, 1, '2015-11-23 02:35:53', '2015-11-23 02:35:53', 41, 37),
(208, 15, 1, '2015-11-23 02:36:16', '2015-11-23 02:36:16', 41, 38),
(209, 20, 1, '2015-11-23 02:36:58', '2015-11-23 02:36:58', 41, 39),
(210, 15, 1, '2015-11-23 02:40:52', '2015-11-23 02:40:52', 41, 27),
(211, 0, 1, '2015-11-23 05:01:30', '2015-11-23 05:01:30', 42, 35),
(212, 15, 1, '2015-11-23 05:02:39', '2015-11-23 05:02:39', 42, 36),
(213, 10, 1, '2015-11-23 05:02:57', '2015-11-23 05:02:57', 42, 37),
(214, 15, 1, '2015-11-23 05:03:13', '2015-11-23 05:03:13', 42, 38),
(215, 20, 1, '2015-11-23 05:03:29', '2015-11-23 05:03:29', 42, 39),
(216, 0, 1, '2015-11-23 05:09:21', '2015-11-23 05:09:21', 43, 35),
(217, 15, 1, '2015-11-23 05:09:52', '2015-11-23 05:09:52', 43, 36),
(218, 10, 1, '2015-11-23 05:10:10', '2015-11-23 05:10:10', 43, 37),
(219, 15, 1, '2015-11-23 05:10:25', '2015-11-23 05:10:25', 43, 38),
(220, 20, 1, '2015-11-23 05:10:47', '2015-11-23 05:10:47', 43, 39),
(221, 0, 1, '2015-11-23 05:21:32', '2015-11-23 05:21:32', 44, 35),
(222, 15, 1, '2015-11-23 05:22:20', '2015-11-23 05:22:20', 44, 36),
(223, 10, 1, '2015-11-23 05:22:39', '2015-11-23 05:22:39', 44, 37),
(224, 15, 1, '2015-11-23 05:23:10', '2015-11-23 05:23:10', 44, 38),
(225, 20, 1, '2015-11-23 05:23:29', '2015-11-23 05:23:29', 44, 39),
(226, 0, 1, '2015-11-23 05:30:51', '2015-11-23 05:30:51', 45, 35),
(227, 15, 1, '2015-11-23 05:31:20', '2015-11-23 05:31:20', 45, 36),
(228, 10, 1, '2015-11-23 05:31:37', '2015-11-23 05:31:37', 45, 37),
(229, 15, 1, '2015-11-23 05:31:51', '2015-11-23 05:31:51', 45, 38),
(230, 20, 1, '2015-11-23 05:32:06', '2015-11-23 05:32:06', 45, 39),
(231, 60, 1, '2015-11-23 05:42:38', '2015-11-23 05:42:38', 45, 25),
(232, 15, 1, '2015-11-23 05:43:30', '2015-11-23 05:43:30', 45, 27),
(233, 10, 1, '2015-11-23 05:46:55', '2015-11-23 05:46:55', 45, 33),
(234, 20, 1, '2015-11-23 06:04:57', '2015-11-23 06:04:57', 45, 34),
(235, 60, 1, '2015-11-23 07:03:06', '2015-11-23 07:03:06', 42, 25),
(236, 10, 1, '2015-11-23 08:51:22', '2015-11-23 08:51:22', 27, 33),
(237, 10, 1, '2015-11-23 13:41:32', '2015-11-23 13:41:32', 30, 35),
(238, 10, 1, '2015-11-23 13:41:36', '2015-11-23 13:41:36', 30, 36),
(239, 0, 1, '2015-11-23 13:45:18', '2015-11-23 13:45:18', 46, 35),
(240, 15, 1, '2015-11-23 13:47:37', '2015-11-23 13:47:37', 46, 36),
(241, 10, 1, '2015-11-23 13:47:54', '2015-11-23 13:47:54', 46, 37),
(242, 15, 1, '2015-11-23 13:48:06', '2015-11-23 13:48:06', 46, 38),
(243, 20, 1, '2015-11-23 13:48:22', '2015-11-23 13:48:22', 46, 39),
(244, 60, 1, '2015-11-23 13:48:41', '2015-11-23 13:48:41', 46, 25),
(245, 15, 1, '2015-11-23 13:49:06', '2015-11-23 13:49:06', 46, 27),
(246, 10, 1, '2015-11-23 13:49:26', '2015-11-23 13:49:26', 46, 33),
(247, 20, 1, '2015-11-23 13:50:48', '2015-11-23 13:50:48', 46, 34),
(248, 0, 1, '2015-11-24 03:31:31', '2015-11-24 03:31:31', 47, 35),
(249, 15, 1, '2015-11-24 03:33:29', '2015-11-24 03:33:29', 47, 36),
(250, 10, 1, '2015-11-24 03:33:49', '2015-11-24 03:33:49', 47, 37),
(251, 15, 1, '2015-11-24 03:34:19', '2015-11-24 03:34:19', 47, 38),
(252, 20, 1, '2015-11-24 03:34:43', '2015-11-24 03:34:43', 47, 39),
(253, 60, 1, '2015-11-24 03:40:52', '2015-11-24 03:40:52', 47, 25),
(254, 15, 1, '2015-11-25 12:45:28', '2015-11-25 12:45:28', 47, 27),
(255, 10, 1, '2015-11-26 05:45:15', '2015-11-26 05:45:15', 47, 33),
(256, 20, 1, '2015-11-26 05:51:38', '2015-11-26 05:51:38', 47, 34),
(257, 0, 1, '2015-11-29 01:50:21', '2015-11-29 01:50:21', 48, 35),
(258, 15, 1, '2015-11-29 01:52:22', '2015-11-29 01:52:22', 48, 36),
(259, 10, 1, '2015-11-29 01:53:02', '2015-11-29 01:53:02', 48, 37),
(260, 15, 1, '2015-11-29 01:53:28', '2015-11-29 01:53:28', 48, 38),
(261, 20, 1, '2015-11-29 01:53:59', '2015-11-29 01:53:59', 48, 39),
(262, 60, 1, '2015-11-29 01:54:45', '2015-11-29 01:54:45', 48, 25),
(263, 15, 1, '2015-11-29 01:55:29', '2015-11-29 01:55:29', 48, 27),
(264, 10, 1, '2015-11-29 01:56:10', '2015-11-29 01:56:10', 48, 33),
(265, 20, 1, '2015-11-29 01:59:16', '2015-11-29 01:59:16', 48, 34),
(266, 30, 1, '2015-11-29 02:50:12', '2015-11-29 02:50:12', 48, 40),
(267, 0, 1, '2015-11-30 16:41:43', '2015-11-30 16:41:43', 49, 35),
(268, 0, 1, '2015-11-30 16:45:01', '2015-11-30 16:45:01', 35, 35),
(289, 0, 1, '2015-12-01 03:09:41', '2015-12-01 03:09:41', 52, 35),
(290, 15, 1, '2015-12-01 03:10:12', '2015-12-01 03:10:12', 52, 36),
(291, 10, 1, '2015-12-01 03:10:26', '2015-12-01 03:10:26', 52, 37),
(292, 15, 1, '2015-12-01 03:10:41', '2015-12-01 03:10:41', 52, 38),
(293, 20, 1, '2015-12-01 03:11:03', '2015-12-01 03:11:03', 52, 39),
(294, 60, 1, '2015-12-01 03:11:20', '2015-12-01 03:11:20', 52, 25),
(295, 15, 1, '2015-12-01 03:11:47', '2015-12-01 03:11:47', 52, 27),
(296, 10, 1, '2015-12-01 03:12:03', '2015-12-01 03:12:03', 52, 33),
(297, 20, 1, '2015-12-01 03:13:23', '2015-12-01 03:13:23', 52, 34),
(298, 30, 1, '2015-12-01 03:14:14', '2015-12-01 03:14:14', 52, 40),
(304, 0, 1, '2015-12-02 03:21:16', '2015-12-02 03:21:16', 54, 35),
(305, 15, 1, '2015-12-02 03:22:24', '2015-12-02 03:22:24', 54, 36),
(306, 10, 1, '2015-12-02 03:22:51', '2015-12-02 03:22:51', 54, 37),
(307, 15, 1, '2015-12-02 03:25:42', '2015-12-02 03:25:42', 54, 38),
(308, 10, 1, '2015-12-08 12:50:55', '2015-12-08 12:50:55', 9, 33),
(309, 0, 1, '2015-12-11 16:34:17', '2015-12-11 16:34:17', 55, 35),
(310, 15, 1, '2015-12-12 05:45:46', '2015-12-12 05:45:46', 55, 36),
(311, 5, 1, '2015-12-12 05:50:57', '2015-12-12 05:50:57', 55, 37),
(312, 15, 1, '2015-12-12 05:51:32', '2015-12-12 05:51:32', 55, 38),
(313, 20, 1, '2015-12-12 05:52:29', '2015-12-12 05:52:29', 55, 39),
(314, 60, 1, '2015-12-12 06:05:03', '2015-12-12 06:05:03', 55, 25),
(315, 15, 1, '2015-12-14 08:10:44', '2015-12-14 08:10:44', 55, 27),
(316, 10, 1, '2015-12-22 14:56:52', '2015-12-22 14:56:52', 55, 33),
(317, 20, 1, '2015-12-22 15:00:06', '2015-12-22 15:00:06', 55, 34),
(318, 10, 1, '2015-12-22 15:06:42', '2015-12-22 15:06:42', 27, 34),
(319, 20, 1, '2015-12-22 15:07:07', '2015-12-22 15:07:07', 27, 40),
(320, 10, 1, '2015-12-22 15:08:28', '2015-12-22 15:08:28', 49, 36),
(321, 5, 1, '2015-12-22 15:08:50', '2015-12-22 15:08:50', 49, 37),
(322, 0, 1, '2015-12-22 15:11:29', '2015-12-22 15:11:29', 56, 35),
(323, 15, 1, '2015-12-22 15:12:13', '2015-12-22 15:12:13', 56, 36),
(324, 5, 1, '2015-12-22 15:12:27', '2015-12-22 15:12:27', 56, 37),
(325, 15, 1, '2015-12-22 15:13:14', '2015-12-22 15:13:14', 56, 38),
(326, 6, 1, '2015-12-22 15:15:44', '2015-12-22 15:15:44', 56, 39),
(327, 30, 1, '2015-12-22 15:16:29', '2015-12-22 15:16:29', 56, 25),
(328, 10, 1, '2015-12-22 15:16:38', '2015-12-22 15:16:38', 56, 27),
(329, 5, 1, '2015-12-22 15:16:47', '2015-12-22 15:16:47', 56, 33),
(330, 10, 1, '2015-12-22 15:16:59', '2015-12-22 15:16:59', 56, 34),
(333, 0, 1, '2015-12-27 05:05:41', '2015-12-27 05:05:41', 57, 35),
(334, 15, 1, '2015-12-27 05:06:45', '2015-12-27 05:06:45', 57, 36),
(335, 10, 1, '2015-12-27 05:07:06', '2015-12-27 05:07:06', 57, 37),
(336, 15, 1, '2015-12-27 05:07:31', '2015-12-27 05:07:31', 57, 38),
(337, 6, 1, '2015-12-27 05:07:45', '2015-12-27 05:07:45', 57, 39),
(338, 30, 1, '2015-12-27 05:08:21', '2015-12-27 05:08:21', 57, 25),
(339, 10, 1, '2015-12-27 05:08:47', '2015-12-27 05:08:47', 57, 27),
(340, 5, 1, '2015-12-27 05:09:04', '2015-12-27 05:09:04', 57, 33),
(341, 10, 1, '2015-12-27 05:09:24', '2015-12-27 05:09:24', 57, 34),
(342, 30, 1, '2015-12-27 05:09:59', '2015-12-27 05:09:59', 57, 40),
(343, 15, 1, '2015-12-29 05:14:46', '2015-12-29 05:14:46', 49, 38),
(344, 30, 1, '2016-01-03 15:54:34', '2016-01-03 15:54:34', 55, 40),
(345, 0, 1, '2016-01-04 10:49:36', '2016-01-04 10:49:36', 58, 35),
(346, 15, 1, '2016-01-04 10:50:44', '2016-01-04 10:50:44', 58, 36),
(347, 10, 1, '2016-01-04 10:51:11', '2016-01-04 10:51:11', 58, 37),
(348, 5, 1, '2016-01-04 10:52:31', '2016-01-04 10:52:31', 58, 38),
(349, 20, 1, '2016-01-04 10:52:50', '2016-01-04 10:52:50', 58, 39),
(350, 60, 1, '2016-01-04 10:57:57', '2016-01-04 10:57:57', 58, 25),
(351, 15, 1, '2016-01-04 10:58:28', '2016-01-04 10:58:28', 58, 27),
(352, 10, 1, '2016-01-04 10:58:59', '2016-01-04 10:58:59', 58, 33),
(353, 15, 1, '2016-01-07 13:40:29', '2016-01-07 13:40:29', 35, 36),
(354, 10, 1, '2016-01-07 13:40:57', '2016-01-07 13:40:57', 35, 37),
(355, 5, 1, '2016-01-07 13:41:11', '2016-01-07 13:41:11', 35, 38),
(356, 6, 1, '2016-01-07 13:41:25', '2016-01-07 13:41:25', 35, 39),
(357, 20, 1, '2016-01-22 06:27:20', '2016-01-22 06:27:20', 49, 39),
(358, 0, 1, '2016-11-04 22:43:54', '2016-11-04 22:43:54', 59, 35),
(359, 15, 1, '2016-11-04 23:19:40', '2016-11-04 23:19:40', 59, 36),
(360, 10, 1, '2016-11-04 23:20:19', '2016-11-04 23:20:19', 59, 37),
(361, 15, 1, '2016-11-04 23:20:55', '2016-11-04 23:20:55', 59, 38),
(362, 20, 1, '2016-11-04 23:21:42', '2016-11-04 23:21:42', 59, 39),
(363, 60, 1, '2016-11-04 23:22:52', '2016-11-04 23:22:52', 59, 25),
(364, 15, 1, '2016-11-11 09:06:44', '2016-11-11 09:06:44', 59, 27),
(365, 5, 1, '2016-11-11 09:07:17', '2016-11-11 09:07:17', 59, 33),
(366, 0, 1, '2016-11-14 12:50:15', '2016-11-14 12:50:15', 60, 35),
(367, 15, 1, '2016-11-14 12:57:51', '2016-11-14 12:57:51', 60, 36),
(368, 10, 1, '2016-11-14 12:59:24', '2016-11-14 12:59:24', 60, 37),
(369, 15, 1, '2016-11-14 12:59:54', '2016-11-14 12:59:54', 60, 38);

-- --------------------------------------------------------

--
-- Table structure for table `glossaries`
--

CREATE TABLE IF NOT EXISTS `glossaries` (
  `id` int(11) NOT NULL,
  `name` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  `description` text COLLATE utf8_unicode_ci,
  `syntax` text COLLATE utf8_unicode_ci,
  `example` text COLLATE utf8_unicode_ci,
  `created_at` datetime DEFAULT NULL,
  `updated_at` datetime DEFAULT NULL,
  `organizer_id` int(11) DEFAULT NULL
) ENGINE=InnoDB AUTO_INCREMENT=25 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

--
-- Dumping data for table `glossaries`
--

INSERT INTO `glossaries` (`id`, `name`, `description`, `syntax`, `example`, `created_at`, `updated_at`, `organizer_id`) VALUES
(1, 'For давталт ', 'Өмнөх давтах заавруудаас харахад дараахь хэв загварын зааврууд олон тааралдаж байна: хувьсагчид анхны утга оноох (i = 0), нөхцөл шалгах (i < 10) , хэсэг зааврыг биелүүлэх, мөн хувьсагчийн утгыг өөрчлөх (i++). For давталт нь энэ бүх алхмуудыг нэг дор нэгтгэж өгдөг.', 'For ([initializers]; [expression]; [iterators]) statement', 'for(int too=3; too < 12; too++)\r\n{\r\n      statements;\r\n}', '2015-11-10 07:43:35', '2015-11-28 07:50:11', 10),
(13, 'Методууд', 'Метод гэдэг нь класс доторх функц юм. Заримдаа методыг гишүүн функц гэж нэрлэдэг. Методууд WriteLine(), AddNumbers() гэх мэт нэртэй байна. Програм ажиллаж эхлэхэд CLR нь Main() функцийг дууддаг. C# програм болгон Main() методтой байх ёстой. Зарчмын хувьд програмд хэд хэдэн Main() метод байж болох ба /main директивыг ашиглан аль классын Main() метод нь тухайн програмын эхлэх цэг болох вэ гэдгийг зааж болно', '[Хандалтийн төрөл] [буцаах утга] [методын нэр] (параметрууд) \r\n{\r\n        statements;\r\n        [return] буцаах утга;\r\n}', 'public int primary_number(int number)\r\n{\r\n        return number;\r\n}', '2015-12-01 07:45:00', '2015-12-01 07:45:00', 10),
(14, 'Comment', 'C# програм дотор мөн тайлбар бичигдэж болно. // системийн консоль объектыг ашиглаж байна Хоёр налуу зураасаар эхэлсэн мөр нь тайлбар гэдгийг илэрхийлдэг. Тайлбар нь програм зохиогчийн бичсэн тэмдэглэгээ бөгөөд програмын ажиллагаанд нөлөө үзүүлэхгүй. C# хэлэнд тайлбарыг гурван янзаар хийж болно.', '1. //\r\n2. /* \r\n     *\r\n     *\r\n    */', '// Нэг мөрийн тайлбар\r\n/*\r\n     Олон мөрийн тайлбар\r\n*/', '2015-12-01 07:46:26', '2015-12-01 07:46:26', 10),
(17, 'Статик түлхүүр үг', 'Өмнөх жишээн дэх Main() методод өөр нэг шинж ажиглагдаж байна, энэ нь static гэсэн түлхүүр үгээр эхэлсэн байна. static түлхүүр үг нь Hello объектыг эхэлж үүсгэлгүйгээр Main() методыг дуудаж болно гэдгийг илэрхийлнэ.', 'static [өгөгдлийн] [функц эсвэл хувьсагчийн нэр];', 'static int alpha;\r\nstatic double beta()\r\n{\r\n        return 2.14;\r\n}', '2015-12-01 07:54:53', '2015-12-01 07:54:53', 10),
(18, 'Үндсэн төрлүүд', 'C# хэл нь хатуу төрөлтэй хэл юм. Хатуу төрөлтэй хэлэнд үүсгэж байгаа объект бүрийн төрлийг заавал тодорхой заах ёстой. Ингэснээр хөрвүүлэгч тухайн объектод тохирсон утгыг оноохыг шаарддаг, энэ нь мөн алдаа гаргахаас сэргийлдэг. Өгөгдлийн төрөл нь хөрвүүлэгчид тухайн объектын хэмжээ (жнь, int төрөл нь 4 байт объектыг заана), авируудыг мэдээлдэг (жнь, Button нь зурах, дарах гэх мэт авиртай).', 'byte              char\r\nbool              short\r\nfloat              double\r\ndecimal         long\r\n', 'byte = 1          char = ''A''\r\nbool = true      short = 12\r\nfloat = 123.4   double = 90009.24\r\ndecimal = 12   long = 88.35', '2015-12-01 08:01:40', '2015-12-01 08:01:40', 10),
(19, 'Тогтмол хувьсагч', 'Тогтмол гэдэг бол түүний утгыг нь өөрчлөх боломжгүй хувьсагч юм. Зарим тохиолдолд хувьсагчийн утга өөрчлөгдөхгүй байх хэрэгцээ гардаг. Тогтмол нь 3 хэлбэрээр байж болно: эх хэлбэрээрээ, нэрлэсэн тогтмол, тоочсон тогтмол. x = 32; Энд 32 гэсэн тоо нь эх хэлбэрээрээ байгаа тогтмол юм.', 'Const [өгөгдлийн төрөл] [хувьсагчийн нэр] = [анхны утга];\r\n', 'Const int identifier = 800;', '2015-12-01 08:03:11', '2015-12-01 08:03:11', 10),
(20, 'Илэрхийлэл (exp)', 'Үр дүндээ утга гаргадаг хувьсагч, тогтмол, объект, үйлдлүүдийн дараалсан нийлэмжийг илэрхийлэл гэдэг.\r\n\r\nАрифметик үйлдлүүд: C# нь нэмэх (+), хасах (-), үржих (*), хуваах (/), үлдэгдэл олох (%) арифметик үйлдүүдийг ашигладаг.\r\n\r\nНөхцөлт үйлдэл\r\nИхэнх үйлдэл нэг юмуу хоёр илэрхийллийг холбогддог. \r\n\r\nЖиших үйлдэл\r\nЖиших үйлдэл нь хоёр утгыг харьцуулаад үнэн эсвэл худал (boolean) утга буцаадаг оператор юм.\r\n\r\nЛогик үйлдэл.\r\nЛогик илэрхийллүүдийг холбоход логик үйлдлүүдийг ашигладаг. \r\n\r\nҮйлдлийн эрэмбэлэлт\r\nХөрвүүлэгч нь илэрхийлэл дэх үйлдлүүдийн биелэх дарааллыг мэддэг.', 'Арифметик: +, -, /, *, %\r\nНөхцөлт үйлдэл: condition ? exp1 : exp2\r\nЖиших үйлдэл: >, <, >=, <=', '5 + 7 * 3\r\ntrue ? 1 : 2\r\n12 < 3 && 12 >= 3\r\n', '2015-12-01 08:09:31', '2015-12-01 08:09:31', 10),
(21, 'Switch нөхцөл', 'Сэлгэх заавар нь угсраа if зааврын өөр нэг хувилбар нь юм, угсраа if заавар нь уншихад их төвөгтэй байдаг. Олон нөхцөлөөс сонголт хийх тохиолдолд сэлгэх зааврыг ашиглах нь илүү тохиромжтой юм. Сэлгэх зааврын логик нь тохирох утгыг олох, тэгээд биелүүлэх юм.', 'Switch (expression) {\r\n	Case constant-expression:\r\n		Statement\r\n		Jump-statement\r\n	[Default: statement]\r\n}', 'switch(12){\r\n        case 1:\r\n             Console.WriteLine("1 байна");\r\n             break;\r\n        case 2:\r\n            Console.WriteLine("2 байна");\r\n            break;\r\n        default:\r\n            Console.WriteLine("Аль нь ч биш");\r\n            break;\r\n}', '2015-12-01 08:12:46', '2015-12-01 08:12:46', 10),
(23, 'Do while давталт', 'Зарим тохиолдолд “үнэн үед үүнийг гүйцэтгэ” гэсэн өгүүлбэрээ “үүнийг гүйцэтгэ, үнэн байх үед давт” гэж өөрчлөх хэрэг гарч болно. Ө.х үйлдэл эхлээд хийгдэнэ, үүний дараа шалгалт хийгдэнэ. Энэ зорилгоор do..while давталтыг ашиглаж болно. ', 'Do expression while statement', 'do{\r\n     count++;\r\n}while(count < 100);', '2015-12-01 08:18:08', '2015-12-01 08:18:39', 10),
(24, 'Forrest', 'Forrest gump', 'Forrest gump', 'Forrest gump', '2015-12-31 05:14:15', '2015-12-31 05:14:15', 10);

-- --------------------------------------------------------

--
-- Table structure for table `instructions`
--

CREATE TABLE IF NOT EXISTS `instructions` (
  `id` int(11) NOT NULL,
  `command` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  `example` text COLLATE utf8_unicode_ci,
  `answer` text COLLATE utf8_unicode_ci,
  `created_at` datetime DEFAULT NULL,
  `updated_at` datetime DEFAULT NULL,
  `lesson_id` int(11) DEFAULT NULL,
  `statement` int(11) DEFAULT NULL
) ENGINE=InnoDB AUTO_INCREMENT=46 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

--
-- Dumping data for table `instructions`
--

INSERT INTO `instructions` (`id`, `command`, `example`, `answer`, `created_at`, `updated_at`, `lesson_id`, `statement`) VALUES
(5, '3-аар мөр дээр: int төрлийн valueOne хувьсагч зарлаад түүнд 10 гэсэн утгыг олго.', NULL, 'int valueOne = 10;', '2015-10-23 00:00:00', '2015-10-23 00:00:00', 27, 2),
(6, '4-ээр мөр дээр: int төрлийн valueTwo хувьсагч зарлаад түүнд 20 гэсэн утгыг олго.', NULL, 'int valueTwo = 20;', '0000-00-00 00:00:00', '0000-00-00 00:00:00', 27, 2),
(7, 'if нөхцөл шалгах үйлдлийн ... оронд дээр зарласан 2 хувьсагчаа үнэн байхаар бич.Үнэн үед "Yes" гэсэн утгыг хэвлэ.', 'if(5 < 10){\r\n    print("Yes");\r\n}', 'int valueOne = 10;\r\nint valueTwo = 20;\r\nif(valueOne < valueTwo){\r\n     Console.WriteLine("Yes");\r\n}\r\nelse{\r\n     Console.WriteLine("No");\r\n}', NULL, NULL, 27, 3),
(8, '4-ээр мөр дээр:  int төрлийн valueTwo хувьсагч зарлаад түүнд 20 гэсэн утгыг олго.', NULL, 'int valueTwo = 20;', '0000-00-00 00:00:00', '0000-00-00 00:00:00', 27, 2),
(9, '1. Баачка дэлгүүрээс алим худалдаж авахаар болжээ. Түүний алимыг хадгалах int төрлийн "uut" гэсэн хувьсагчийг зарла.', 'int бүхэл_тоо;', 'int uut;', '2015-10-26 00:00:00', '2015-10-26 00:00:00', 25, 1),
(10, '2. Баачка нийт 4 алим авсан бөгөөд уутруугаа хийх үедээ нэгийн унагаасан. Тиймээс нийт алимаас нэгийн хасаад "uut" хувьсагчид хадгал.', NULL, 'int uut;\r\nuut = 4 - 1;', '2015-10-26 00:00:00', '2015-10-03 00:00:00', 25, 2),
(11, 'Баачка гэртээ харихад ээж түүнээс хэлэн алим авчирсаныгасуулаа. Батын нийт алимыг тоог хадгалах "uut" массивыг 5-р мөрөнд байрлах хэвлэх функц нь дотор бичээрэй.', 'Console.WriteLine(12);', 'int uut;\r\nuut = 4 - 1;\r\nConsole.WriteLine(uut);', '2015-10-26 00:00:00', '2015-10-26 00:00:00', 25, 10),
(12, 'Баачкаг гэртээ харихад ээж түүнээс хэлэн алим авчирсаныгасуулаа. Батын нийт алимыг тоог хадгалах "uut" массивыг 5-р мөрөнд байрлах хэвлэх функц нь дотор бичээрэй.', 'print(8);', 'int uut;\r\nuut = 4 - 1;\r\nConsole.WriteLine(uut);', '2015-10-26 00:00:00', '2015-10-26 00:00:00', 25, 10),
(21, '0 - 31 хүртэл давтах for давталт бичнэ үү.', 'for(int тоо; тоо <= 31; тоо нэмэгдүүл)', 'for(int i=0; i <= 31; i++){\r\n	\r\n}', '2015-11-16 12:14:00', '2015-11-16 12:14:00', 33, 5),
(22, 'int төрлийн anhnii_too нэртэй хувьсагч зарла.', 'int бүхэл_тоо;', 'int anhnii_too;', '2015-11-16 13:26:49', '2015-11-16 13:26:49', 34, 1),
(23, 'anhnii_too хувьсагчид гараас 37 гэсэн утга оруул.', 'бүхэл_тоо = оруулах;', 'int anhnii_too;\r\nanhnii_too = 37;', '2015-11-16 13:30:06', '2015-11-16 13:30:06', 34, 2),
(24, 'Анхны тооны хуваагдагчдыг тоолох count нэртэй хувьсагч зарлаад 0 гэсэн утга олго', '', 'int count = 0;', '2015-11-16 14:19:06', '2015-11-16 14:19:06', 34, 2),
(25, '2-оос эхлэн anhnii_too - г 2 той хуваасантай тэнцэх(9/2) тэнцэх тооны удаа давт for давталт бич. ', 'int тоо = 90;\nfor(int i=0; i < тоо/2; i++)\n{\n\n}', 'for(int i=2; i <= 37/2; i++){\r\n       \r\n}', '2015-11-16 14:25:49', '2015-11-16 14:25:49', 34, 5),
(26, 'Дээрх for давталтын бүх утгууд нь анхны тоон хуваагдагч мөн эсэхийг шалгах if оператор бич.Нөхцөл үнэн үед count хувьсагчийн утгыг нэмэгдүүлээд давталтыг зогсоох break операторыг дараагийн мөрөнд бич.', 'for(int i=0; i < 12/2; i++)\r\n{\r\n      if( анхны_тоо % i == 0 )\r\n     {\r\n            \r\n     }\r\n}', 'int anhnii_too;\r\nanhnii_too = 37;\r\n\r\nint count =0;\r\n\r\nfor(int i=2; i <= anhnii_too / 2; i++){\r\n	if(anhnii_too % i == 0){\r\n    	count++;\r\n        anhnii_too = anhnii_too;\r\n    }\r\n}', '2015-11-16 14:34:37', '2015-11-16 14:34:37', 34, 3),
(28, 'For давталтын гадна count хувьсагчийн утга нь 0-тэй тэнцүү эсэхийг болон anhnii_too хувьсагчийн утга нь 1-тэй тэнцүү биш эсэхийг шалгах if нөхцөл шалгах операторыг бич', 'for(int i=0; i < 90/2; i++)\r\n{\r\n        . . .\r\n}\r\nif(тоолуур == нэг ба анхны тоо != 1)\r\n{\r\n       . . .\r\n}', 'int anhnii_too = 37;\r\nint count = 0;\r\n\r\nif(count==0 && anhnii_too != 1){\r\n\r\n}', '2015-11-16 14:57:57', '2015-11-16 14:57:57', 34, 3),
(29, 'Дээрх if нөхцөл үнэн үед "Yes" худал үед "No" гэсэн утгыг хэвлэ.', 'if(үнэн бол){\r\n     Console.WriteLine("Yes");\r\n}\r\nelse{\r\n    Console.WriteLine("No");\r\n}', 'int anhnii_too = 37;\r\n\r\nint count =0;\r\n\r\nif(anhnii_too == 37 && count == 0){\r\n	Console.WriteLine("Yes");\r\n}\r\nelse{\r\n	Console.WriteLine("No");\r\n}', '2015-11-16 15:03:18', '2015-11-16 15:03:18', 34, 9),
(30, 'Console.WriteLine(""); методийн дотор "Hello world" тэмдэгт мөрийг бич.', 'Console.WriteLine("Энд тэмдэгт мөр байна");', 'Console.WriteLine("Hello world");', '2015-11-21 10:07:58', '2015-11-21 10:07:58', 35, 10),
(31, 'Зарлагдсан байгаа buhel_too хувьсагчид 222 гэсэн тоог олго.', '', 'int buhel_too;\r\nbuhel_too = 222;', '2015-11-21 10:26:08', '2015-11-21 10:26:08', 36, 2),
(32, 'Зарлагдсан байгаа neg_temdegt хувьсагчид ''A'' гэсэн тэмдэгтийг олго.', '', 'char neg_temdegt;\r\nneg_temdegt = ''A'';\r\n', '2015-11-21 10:27:23', '2015-11-21 10:27:23', 36, 2),
(33, 'bo хувьсагчид true гэсэн утгыг олго.', '', 'boolean bo;\r\nbo = true;\r\n', '2015-11-21 10:28:23', '2015-11-21 10:28:23', 36, 2),
(34, '4-р мөр нь дээр байгаа int drogba; хувьсагчийн шинэ мөрлүү шилжүүлэх. ', 'int drogba = 11;', 'int drogba = 11;', '2015-11-21 10:47:10', '2015-11-21 10:47:10', 37, 11),
(35, '9 - р мөр нь дээр байрлах keeper хувьсагчийг шинэ мөрөнд оруулах.', 'keeper++;', 'int keeper;\r\nkeeper++;', '2015-11-21 10:48:50', '2015-11-21 10:48:50', 37, 11),
(36, 'sum хувьсагчид өгөгдсөн 2 тооны нийлбэрийг олго.', '', 'int sum = 34 + 113;', '2015-11-21 11:12:36', '2015-11-21 11:12:36', 38, 2),
(37, 'difference хувьсагчид өгөгдлсөн хоёр тооны ялгаварыг олго.', '', 'int difference = 113 -  34;', '2015-11-21 11:13:31', '2015-11-21 11:13:31', 38, 2),
(38, 'divide хувьсагчид өгөгдсөн хоёр тооны ноогдворыг олго.', '', 'int divide = 114 /  2;', '2015-11-21 11:14:35', '2015-11-21 11:14:35', 38, 2),
(39, 'multiple хувьсагчид өгөгдсөн 2 тооны үрживэрийг олго.', '', 'int multiple = 114 * 2;', '2015-11-21 11:15:31', '2015-11-21 11:15:31', 38, 2),
(40, 'one хувьсагчид > их операторыг ашиглана 2 тооны үр дүнг бич.', '', 'boolean one;\r\none = 12 > 5;', '2015-11-21 11:42:42', '2015-11-21 11:42:42', 39, 2),
(41, 'two хувьсагчид < операторыг ашигла.', '', 'boolean two;\r\ntwo = 12 < 5;', '2015-11-21 11:43:37', '2015-11-21 11:43:37', 39, 2),
(42, 'three хувьсагчид их буюу тэнцүү операторыг ашигла.', '', 'boolean three;\r\nthree = 12 >= 5;', '2015-11-21 11:44:27', '2015-11-21 11:44:27', 39, 2),
(43, 'four хувьсагчид <= бага буюу тэнцүү операторыг ашигла.', '', 'boolean four;\r\nfour = 12 <= 5;', '2015-11-21 11:45:20', '2015-11-21 11:45:20', 39, 2),
(44, 'Хэрэв check_type = 1 бол account_type = balance/10. Хэрэв check_type = 2 бол account_type = (balance*2)/10. Хэрэв check_type > 2 бол account_type = balance*3/10.', '', 'int check_type = 1;\r\nint account_type;\r\nint balance = 1000;\r\nswitch(check_type){\r\n         case 1:\r\n                account_type = balance/10;\r\n                Console.WriteLine("One is true");\r\n                break;\r\n            case 2:\r\n                 account_type = (balance*2)/10;\r\n                Console.WriteLine("Two is true");\r\n                break;\r\n            default:\r\n                account_type = balance*3/10;\r\n                Console.WriteLine("Nothing true");\r\n                break;\r\n}', '2015-11-29 02:55:49', '2015-11-29 02:55:49', 40, 2),
(45, 'while давталтын эхний IF нөхцөл нь account_type / 100 == 1 дарагийнх account_type / 100 == 2', '', 'int check_type = 1;\r\nint balance = 1000;\r\nint total_year = 5;\r\nint account_type;\r\n        \r\nswitch(check_type)\r\n{\r\n       case 1:\r\n                account_type = balance/10;\r\n                Console.WriteLine("One is true");\r\n                break;\r\n       case 2:\r\n                 account_type = (balance*2)/10;\r\n                Console.WriteLine("Two is true");\r\n                break;\r\n       default:\r\n                account_type = balance*3/10;\r\n                Console.WriteLine("Nothing true");\r\n                break;\r\n}\r\n        \r\nint count=0;\r\nint sum=0;\r\nwhile(count <= account_type / 2){\r\n        	\r\nif(account_type / 100 == 1){\r\n    sum = sum + (count * count);\r\n }\r\n elseif(account_type / 100 == 2){\r\n    sum = sum + (count + count);\r\n }\r\nelse{\r\n            	sum = sum + (account_type -  count);\r\n            }\r\n       count++;\r\n}', '2015-11-29 03:16:13', '2015-11-29 03:16:13', 40, 3);

-- --------------------------------------------------------

--
-- Table structure for table `lessons`
--

CREATE TABLE IF NOT EXISTS `lessons` (
  `id` int(11) NOT NULL,
  `name` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  `theory` text COLLATE utf8_unicode_ci,
  `theory_example` text COLLATE utf8_unicode_ci,
  `instruction` text COLLATE utf8_unicode_ci,
  `answer` text COLLATE utf8_unicode_ci,
  `code` text COLLATE utf8_unicode_ci,
  `score` int(11) DEFAULT NULL,
  `sub_score` int(11) DEFAULT NULL,
  `is_exercise` tinyint(1) DEFAULT NULL,
  `created_at` datetime DEFAULT NULL,
  `updated_at` datetime DEFAULT NULL,
  `chapter_id` int(11) DEFAULT NULL,
  `organizer_id` int(11) DEFAULT NULL
) ENGINE=InnoDB AUTO_INCREMENT=41 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

--
-- Dumping data for table `lessons`
--

INSERT INTO `lessons` (`id`, `name`, `theory`, `theory_example`, `instruction`, `answer`, `code`, `score`, `sub_score`, `is_exercise`, `created_at`, `updated_at`, `chapter_id`, `organizer_id`) VALUES
(25, 'Int төрлийн хувьсагч', 'C# програмчлалын хэлэнд int төрөл гэдэг нь бүхэл тоон төрлийг заадаг. Энэ нь ихэвчлэн бүхэл тоон төрөл тзарлахад ашиглагдана.', 'int man = 12;\r\nint woman = 12.4;\r\nint man_woman = man + woman;\r\n\r\n// man_woman = 24', 'Энэ хичээлийн хүрээнд int буюу бүхэл тоон төрлийн хувьсагч зарлах түүнд утга олгох даалгаврыг гүйцэтгэнэ.', 'int uut;\r\nuut = 4 - 1;\r\nConsole.WriteLine(uut);', 'class Program{\r\n	static void Main(){\r\n    	\r\n\r\n        Console.WriteLine("1");\r\n    }\r\n}', 60, 30, 0, '2015-10-24 02:12:24', '2015-11-23 01:27:51', 7, 10),
(27, 'If нөхцөл шалгалт', 'C# програмчлалын хэлэнд нөхцөлт салаалалт нь if, else зэрэг түлхүүр үгүүдийн тусламжтай хийгдэнэ. Өгөгдсөн нөхцөлөөс хамааран салаалалт хийгдэнэ. Нөхцөл гэдэг нь логик илэрхийлэл юм. Энэ илэрхийллийн утга үнэн үед if заавар доторх командууд биелэнэ. if заавар нь else зааврыг агуулж болно, энд нөхцөл худал үед биелэх командууд бичигдэнэ.', ' if (expression) statement1 \r\n[else statement2]', 'Нөхцөл шалгах операторыг ашиглан 2 хувьсагчийн аль нь их болохыг шалгах хичээл юм. Эхлээд valueOne, valueTwo гэсэн 2 хувсагч зарлаад дараа нь энэ 2 хувьсагчийг хоорондон харьцуулна.', 'int valueOne=10;\r\nint valueTwo=20;\r\nif(valueOne < valueTwo){\r\n      Console.WriteLine(valueOne);\r\n}\r\nelse{\r\n      Console.WriteLine(valueTwo);\r\n}', 'class Program{\r\n	static void Main(){\r\n    	\r\n        if ( false ){\r\n             Console.WriteLine(1);\r\n        }\r\n        else{\r\n             Console.WriteLine(2);\r\n        }\r\n    }\r\n}', 15, 5, 0, '2015-10-23 00:25:56', '2015-11-23 01:31:01', 8, 10),
(33, 'For шалгалт', 'For давталт нь эхлэн утга, нөхцөл шалгах хэсэг, нэмэгдүүлэх гэсэн 3 хэсгээс тогтоно. Эдгээр нь бүгдээрээ нийлж давталтыг бүрдүүлнэ. Дараах бүтэцтэй байна. for ( initial ; condition; incremnt ){ statements }', 'for(хувьсагч ; нөхцөл шалгах ; нэмэгдүүлэх)\r\n{\r\n          стэйтэметнүүд;\r\n}', 'For давталт ашиглан 0 - 31 хүртэл хэвлэх.', 'for(int i=0; i <= 31; i++){\r\n	\r\n}', 'for( хувьсагч ; нөхцөл ; нэмэгдүүлэх){}', 10, 5, 0, '2015-11-16 12:11:42', '2015-11-23 01:35:35', 9, 10),
(34, 'Анхны тоо', 'Анхны тоо гэдэг бол зөвхөн өөрөө өөртөө болон нэг хуваагддаг тоог хэлдэг. Жишээ нь 2 бол анхны тоо бөгөөд зөвхөн 1 болон өөртөө хуваагдаж байна.', '', 'Анхны тоо олох. Эхлээд анхны тоо гэсэн хувьсагч зарлаад түүнд утга оруулна. Дараа нь тухайн хувьсагчаа нэмэгдүүлээд хуваагдагч болгонын тоолно. Давталт дууссаны дараа тухайн тооны хуваагдагч нь 0 бол анхны тоо юмаа.', 'int anhnii_too;\r\nanhnii_too = 37;\r\n\r\nint count =0;\r\n\r\nfor(int i=2; i <= anhnii_too /2; i++)\r\n{\r\n	if(anhnii_too % 2 == 0){\r\n    	conut++;\r\n        anhnii_too = anhnii_too;\r\n    }\r\n}\r\n\r\nif(anhnii_too == 37 && count == 0){\r\n	Console.WriteLine("Yes");\r\n}\r\nelse{\r\n	Console.WriteLine("No");\r\n}', 'class Program{\r\n	static void Main(){\r\n\r\n    }\r\n}', 20, 10, 0, '2015-11-16 13:25:10', '2015-11-23 01:38:51', 9, 10),
(35, 'Hello world', 'C# програмчлалын хэл нь обьект хандалт, маш хүчирхэг хэл юмаа. Энэ хэлийг ашиглан төрөл бүрийн дэсктоп програмуудыг бүтээж болно. Одоо дараах даалгварыг гүйцэтгэе.', '', 'WriteLine функцийн ашиглан "Hello world" тэмдэгтийг хэвлэх.', 'Console.WriteLine("Hello world");', 'class Program{\r\n	static void Main(){\r\n    }\r\n}', 10, 4, 0, '2015-11-21 04:11:59', '2015-11-21 04:11:59', 6, 10),
(36, 'Хувьсагчид утга олгох', 'C# програмчлалын хэл нь хатуу өгөгдлийн төрөл хэл юм. Энэ нь хувьсагчаа зарлахдаа заавал өгөгдлийн төрлийн зааж өгөх хэрэгтэй гэсэн үг билээ. \r\nХувьсагчид утга олгохдоо заавал зарласан төрөлтэй нь тохирох утгыг олгох хэрэгтэй юмаа.', 'char ганц_тэмдэгт = ''Ү'';\r\nint бүхэл_тоо_хувьсагч = 900;\r\ndouble бутархай_тоо_хувьсагч = 15.5;', 'Эдитор доор зарлагдсан 3 хувьсагчид тохирох утгыг олгох.', 'int buhel_too;\r\nchar neg_temdegt;\r\nboolean bo;\r\n        \r\nbuhel_too = 222;\r\nneg_temdegt = ''A'';\r\nbo = true;', 'class Program{\r\n	static void Main(){\r\n        \r\n        int buhel_too;\r\n        char neg_temdegt;\r\n        boolean bo;\r\n        \r\n        buhel_too = ;\r\n        neg_temdegt = ;\r\n        bo = ;\r\n        \r\n    }\r\n}', 15, 5, 0, '2015-11-21 10:24:05', '2015-11-21 10:24:05', 6, 10),
(37, 'Кодны алдаа засах.', 'Код бичих алдаа гарах явдал ихээхэн байдаг билээ. Гарсан алдааг засахдаа тухайн алдааны тайлбарыг унших хэрэгтэй байдаг. ', '', 'Эдитор дээр өгөгдлсөн алдаатай кодыг янзалж алдаагүй болгох.', 'int torres = 9;\r\nint drogba = 11;\r\n        \r\nint keeper;\r\nfor(int ball = 0; ball < 10; ball++){\r\n     Console.WriteLine("ball = ", ball);\r\n     keeper++;\r\n}', 'class Program{\r\n	static void Main(){\r\n        \r\n        int torres = 9;int drogba \r\n            = 11;\r\n        \r\n        int keeper;\r\n        for(int ball = 0; ball < 10; ball++){\r\n        	Console.WriteLine("ball = ", ball);keeper\r\n                ++;\r\n        }\r\n        \r\n    }\r\n}', 10, 5, 0, '2015-11-21 10:44:30', '2015-11-21 10:44:30', 6, 10),
(38, 'Арифметик оператор', 'Арифметик оператор гэдэг нь нэмэх, хасах, хуваах, үржих, үлдэгдэлтэй хуваах зэрэг үйлдлүүд билээ. Эдгээр үйлдлүүд нь ямар ч програмчлалын хэлэнд маш түгээмэл ашиглагддаг. ', '12 + 12 // нэмэх оператор = 24\r\n12 - 12 // Хасах оператор = 0\r\n12 / 12 // Хуваах оператор = 1\r\n12 * 12 // Үржих оператор = 114', 'Эдитор дээр өгөгдлсөн кодууд дээр +, -, *, / үйлдлүүдийг ашиглах.', 'int sum = 34 + 113;\r\n        int difference = 113 - 34;\r\n        int divide = 114 / 2;\r\n        int multiple = 114 * 2;\r\n        \r\n        Console.WriteLine(sum);\r\n        Console.WriteLine(difference);\r\n        Console.WriteLine(divide);\r\n        Console.WriteLine(multiple);', 'class Program{\r\n	static void Main(){\r\n        \r\n        int sum = 34  113; // + оператор ашиглах\r\n        int difference = 113  34; // - оператор ашиглах\r\n        int divide = 114  2; // / оператор ашиглах\r\n        int multiple = 114  2; // * оператор ашиглах\r\n        \r\n        Console.WriteLine(sum);\r\n        Console.WriteLine(difference);\r\n        Console.WriteLine(divide);\r\n        Console.WriteLine(multiple);\r\n    }\r\n}', 15, 10, 0, '2015-11-21 11:11:31', '2015-11-21 11:17:02', 6, 10),
(39, 'Харьцуулах оператор', 'Харьцуулах оператор нь өгөгдсөн илэрхийллийг боловсруулж зөвхөн үнэн эсвэл худал гэсэн утгыг буцаана. Дараах харьцуулах операторууд байна: >, <, >=, <=.', '', 'Эдитор дээр байгаа one хувьсагчид > операторыг ашиглана.\r\ntwo хувьсагчид > операторыг ашиглана. three хувьсагчид >= операторыг ашиглана. four хувьсагчид <= операторыг ашиглана.', 'boolean one;       \r\nboolean two;\r\nboolean three;\r\nboolean four;\r\n        \r\none = 12 > 5;\r\ntwo = 12 < 5;\r\nthree = 12 >= 5;\r\nfour = 12 <= 5;\r\n        \r\nConsole.WriteLine(one);\r\nConsole.WriteLine(two);\r\nConsole.WriteLine(three);\r\nConsole.WriteLine(four);', 'class Program{\r\n	static void Main(){\r\n        \r\n        boolean one;       \r\n        boolean two;\r\n        boolean three;\r\n        boolean four;\r\n        \r\n        one = 12  5;\r\n        two = 12  5;\r\n        three = 12  5;\r\n        four = 12  5;\r\n        \r\n        Console.WriteLine(one);\r\n        Console.WriteLine(two);\r\n        Console.WriteLine(three);\r\n        Console.WriteLine(four);\r\n    }\r\n}', 20, 14, 0, '2015-11-21 11:40:45', '2015-11-21 11:40:45', 6, 10),
(40, 'Дансны үлдэгдэл', 'Банкны үлдэгдэл тооцох аргачлал гэдэг нь тодорхой аргын хүрээнд хийгдэх бөгөөд одоо түүнийг судалгцгаая.', 'int balance = 1000;\r\nint total_year = 5;', 'Өгөгдсөн дансны үлдэгдэл болон нийт хуримтлуулах жилийг ашиглан банкны тооцоо хийж нийт жилд хэдэн төгрөг авсаныг нь тооцоолж гаргана. Доорх даалгаварыг шатлан гүйцэтгэнэ үү?', 'class Program{\r\n	static void Main(){\r\n    	\r\n        \r\n        int check_type = 1;\r\n        int balance = 1000;\r\n        int total_year = 5;\r\n        int account_type;\r\n        \r\n        switch(check_type)\r\n        {\r\n            case 1:\r\n                account_type = balance/10;\r\n                Console.WriteLine("One is true");\r\n                break;\r\n            case 2:\r\n                 account_type = (balance*2)/10;\r\n                Console.WriteLine("Two is true");\r\n                break;\r\n            default:\r\n                account_type = balance*3/10;\r\n                Console.WriteLine("Nothing true");\r\n                break;\r\n        }\r\n        \r\n        int count=0;\r\n        \r\n        int sum=0;\r\n        while(count <= account_type / 2){\r\n        	\r\n            if(account_type / 100 == 1){\r\n            	sum = sum + (count * count);\r\n            }\r\n            elseif(account_type / 100 == 2){\r\n            	sum = sum + (count + count);\r\n            }\r\n            else{\r\n            	sum = sum + (account_type -  count);\r\n            }\r\n            \r\n            count++;\r\n        }\r\n        \r\n        boolean is_get;\r\n        if(sum > 10100 && sum < 42925){\r\n            is_get = true;\r\n        	Console.WriteLine("You got ", 42925/2, " money from bank");\r\n        }\r\n        elseif(42925 >= sum){\r\n            is_get = false;\r\n        	Console.WriteLine("You got ", 42925/5, " money from administrator");\r\n        }\r\n        \r\n        if(is_get){\r\n            boolean is_agree=false;\r\n            int max = 60000;\r\n            int month = 12;\r\n            int days = 30;\r\n        	int exp = (42925 + 1200) / month;\r\n            \r\n            float year_interest=0;\r\n            float month_interest=0;\r\n            float total_interest = 0;\r\n            \r\n            for(int k = 1; k <= total_year; k++){\r\n            \r\n                for(int j=0; j < month; j++){\r\n                    \r\n                    for(int i=1; i < exp / days; i++){\r\n\r\n                        if(balance < 1000){\r\n                            Console.WriteLine("Balance can''t be less than 1 thousand");\r\n                        }\r\n                        else{\r\n                            month_interest = i + (i * 2);\r\n                        }\r\n                    }\r\n\r\n                    year_interest += month_interest;\r\n                }\r\n\r\n                total_interest += year_interest;\r\n            }\r\n            Console.WriteLine("Total interest is ", total_interest);\r\n            \r\n            int one_year = total_interest / 4;\r\n            \r\n           	if(one_year < max){\r\n            	is_agree = true;\r\n            }\r\n            else{\r\n            	is_agree = false;\r\n            }\r\n            \r\n            if(is_agree){\r\n            	total_year += total_year;\r\n                \r\n                for(int i=2; i < total_year; i++){\r\n                	total_interest += month_interest * i;\r\n                }\r\n                \r\n                Console.WriteLine("Agree total interest is ", total_interest);\r\n            }\r\n        }\r\n        else{\r\n        	Console.WriteLine("finish");\r\n        }\r\n        \r\n        \r\n    }\r\n}', 'class Program{\r\n	static void Main(){\r\n    	\r\n        \r\n        int check_type = 1;\r\n        int balance = 1000;\r\n        int total_year = 5;\r\n        int account_type;\r\n        \r\n        switch(check_type)\r\n        {\r\n            case 1:\r\n                account_type = ....;\r\n                Console.WriteLine("One is true");\r\n                break;\r\n            case 2:\r\n                 account_type = .....;\r\n                Console.WriteLine("Two is true");\r\n                break;\r\n            default:\r\n                account_type = ......;\r\n                Console.WriteLine("Nothing true");\r\n                break;\r\n        }\r\n        \r\n        int count=0;\r\n        \r\n        int sum=0;\r\n        while(count <= account_type / 2){\r\n        	\r\n            if(  .....  ){\r\n            	sum = sum + (count * count);\r\n            }\r\n            elseif(  .....  ){\r\n            	sum = sum + (count + count);\r\n            }\r\n            else{\r\n            	sum = sum + (account_type -  count);\r\n            }\r\n            \r\n            count++;\r\n        }\r\n        \r\n        boolean is_get;\r\n        if(sum > 10100 && sum < 42925){\r\n            is_get = true;\r\n        	Console.WriteLine("You got ", 42925/2, " money from bank");\r\n        }\r\n        elseif(42925 >= sum){\r\n            is_get = false;\r\n        	Console.WriteLine("You got ", 42925/5, " money from administrator");\r\n        }\r\n        \r\n        if(is_get){\r\n            boolean is_agree=false;\r\n            int max = 60000;\r\n            int month = 12;\r\n            int days = 30;\r\n        	int exp = (42925 + 1200) / month;\r\n            \r\n            float year_interest=0;\r\n            float month_interest=0;\r\n            float total_interest = 0;\r\n            \r\n            for(int k = 1; k <= total_year; k++){\r\n            \r\n                for(int j=0; j < month; j++){\r\n                    \r\n                    for(int i=1; i < exp / days; i++){\r\n\r\n                        if(balance < 1000){\r\n                            Console.WriteLine("Balance can''t be less than 1 thousand");\r\n                        }\r\n                        else{\r\n                            month_interest = i + (i * 2);\r\n                        }\r\n                    }\r\n\r\n                    year_interest += month_interest;\r\n                }\r\n\r\n                total_interest += year_interest;\r\n            }\r\n            Console.WriteLine("Total interest is ", total_interest);\r\n            \r\n            int one_year = total_interest / 4;\r\n            \r\n           	if(one_year < max){\r\n            	is_agree = true;\r\n            }\r\n            else{\r\n            	is_agree = false;\r\n            }\r\n            \r\n            if(is_agree){\r\n            	total_year += total_year;\r\n                \r\n                for(int i=2; i < total_year; i++){\r\n                	total_interest += month_interest * i;\r\n                }\r\n                \r\n                Console.WriteLine("Agree total interest is ", total_interest);\r\n            }\r\n        }\r\n        else{\r\n        	Console.WriteLine("finish");\r\n        }       \r\n    }\r\n}', 30, 10, 0, '2015-11-24 04:40:19', '2015-11-29 03:20:34', 9, 10);

-- --------------------------------------------------------

--
-- Table structure for table `media`
--

CREATE TABLE IF NOT EXISTS `media` (
  `id` int(11) NOT NULL,
  `name` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  `attachment` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  `created_at` datetime DEFAULT NULL,
  `updated_at` datetime DEFAULT NULL,
  `organizer_id` int(11) DEFAULT NULL,
  `video` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

-- --------------------------------------------------------

--
-- Table structure for table `medias`
--

CREATE TABLE IF NOT EXISTS `medias` (
  `id` int(11) NOT NULL,
  `name` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  `attachment` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  `created_at` datetime DEFAULT NULL,
  `updated_at` datetime DEFAULT NULL,
  `organizer_id` int(11) DEFAULT NULL,
  `video` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL
) ENGINE=InnoDB AUTO_INCREMENT=38 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

--
-- Dumping data for table `medias`
--

INSERT INTO `medias` (`id`, `name`, `attachment`, `created_at`, `updated_at`, `organizer_id`, `video`) VALUES
(25, 'Anatomy of Backbone', '111865619_1280x720.jpg', '2015-10-27 13:09:22', '2015-10-27 13:09:22', 6, 'Anatomy_of_Backbone.js_Part_1__Level_1_.mp4'),
(26, 'CSS Cross-Country', 'animationlogo.jpg', '2015-10-27 13:09:56', '2015-10-27 13:09:56', 6, 'CSS_Cross-Country__Level_1_.mp4'),
(27, 'iOS Operation- Models', 'codeschool.png', '2015-10-27 13:10:24', '2015-10-27 13:10:24', 6, 'iOS_Operation-_Models__Level_1_.mp4'),
(28, 'Journey Into Mobile', 'Code-School-Git-lesson-520x245.jpg', '2015-10-27 13:10:57', '2015-10-27 13:10:57', 6, 'Journey_Into_Mobile__Level_1_.mp4'),
(29, 'Zombie Outlaws', 'ionic-by-doing-header.png', '2015-10-27 13:11:53', '2015-10-27 13:11:53', 6, 'Rails_4_Zombie_Outlaws__Level_1_.mp4'),
(30, 'Rails For Zombies Redux', 'mu.png', '2015-10-27 13:12:42', '2015-10-27 13:12:42', 6, 'Rails_For_Zombies_Redux__Level_1_.mp4'),
(31, 'Ruby Bits 2', 'treehouse_library.jpg', '2015-10-27 13:13:51', '2015-10-27 13:13:51', 6, 'Ruby_Bits_2__Level_1_.mp4'),
(32, 'Try iOS', 'tumblr_inline_mimplvoGaw1qz4rgp.png', '2015-10-27 13:14:33', '2015-10-27 13:14:33', 6, 'Try_iOS__Level_1_.mp4'),
(34, 'Schools Don''t Teach', 'What-schools-dont-teach.jpg', '2015-10-27 13:52:39', '2015-10-27 13:55:22', 6, 'What_Most_Schools_Don_t_Teach.mp4'),
(35, 'Images, Pixels and RGB', 'mqdefault.jpg', '2015-10-27 13:53:36', '2015-10-27 13:53:36', 6, 'Images__Pixels_and_RGB.mp4'),
(37, 'Анхны тоо', 'prime.png', '2015-11-30 15:58:58', '2015-11-30 15:58:58', 10, 'Video5.mp4');

-- --------------------------------------------------------

--
-- Table structure for table `organizers`
--

CREATE TABLE IF NOT EXISTS `organizers` (
  `id` int(11) NOT NULL,
  `fullname` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  `email` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  `password` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  `picture` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  `major` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  `about_me` text COLLATE utf8_unicode_ci,
  `created_at` datetime DEFAULT NULL,
  `updated_at` datetime DEFAULT NULL,
  `attachment` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  `type` int(11) DEFAULT NULL
) ENGINE=InnoDB AUTO_INCREMENT=12 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

--
-- Dumping data for table `organizers`
--

INSERT INTO `organizers` (`id`, `fullname`, `email`, `password`, `picture`, `major`, `about_me`, `created_at`, `updated_at`, `attachment`, `type`) VALUES
(6, 'Мядагмаа', 'myd@yahoo.com', '909090', NULL, 'Их сургуулийн багш', 'Сайн байна уу? Намайг Myda гэдэг. Би багш.', '2015-10-17 15:23:15', '2015-10-17 15:23:15', 'kristy.png', 1),
(8, 'Амарсанаа', 'amaraa@yahoo.com', '808080080', NULL, 'Хуульч', 'Амархан сайн байна уу? Намайг Амараа гэдэг би их сургуулийн хуульч. Бас Цоодолын найз.', '2015-10-17 15:25:29', '2015-10-17 15:25:29', 'matthew.png', 1),
(10, 'Admin', 'admin@yahoo.com', '12345678', NULL, 'Тагнуулч', 'Сдраствуйте мне завот Ариука. Я хочу Руский. Я язык программий.', '2015-10-17 15:30:52', '2015-12-31 01:55:51', 'tom.jpg', 1),
(11, 'Дүүриймаа', 'durma@yahoo.com', '12345', NULL, 'Программист', 'За сайн уу? Намайг Дүүриймаа гэдэг. Би программист мэргэжилтэй. Та бүхэнд өөрийн чадах бүхнээ хүргэх болно.', '2015-10-17 15:32:17', '2015-10-17 15:32:17', 'nan.jpg', 1);

-- --------------------------------------------------------

--
-- Table structure for table `questions`
--

CREATE TABLE IF NOT EXISTS `questions` (
  `id` int(11) NOT NULL,
  `ques` text COLLATE utf8_unicode_ci,
  `created_at` datetime DEFAULT NULL,
  `updated_at` datetime DEFAULT NULL,
  `student_id` int(11) DEFAULT NULL,
  `title` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  `picture` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  `category` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL
) ENGINE=InnoDB AUTO_INCREMENT=18 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

--
-- Dumping data for table `questions`
--

INSERT INTO `questions` (`id`, `ques`, `created_at`, `updated_at`, `student_id`, `title`, `picture`, `category`) VALUES
(12, 'Жишээ нь би ааруул хувьсагч зарлахад өгөгдлийн төрөл бичих шаардлагатай юмуу яагаад заавал бичих  ёстой юм болоо?', '2015-10-31 01:38:25', '2015-10-31 01:38:25', 18, 'C# хувьсагч зарлахад өгөгдлийн төрөл заавал зарлах уу?', 'shipback.jpg', '7'),
(13, 'Анх удаа бүртгүүлэхэд хаана код бичих бэ?', '2015-11-01 08:54:40', '2015-11-01 08:54:40', 19, 'Хаана код бичих бэ?', 'asf.PNG', '6'),
(14, 'Хувьсагч зарлах талаарх ерөнхий ойлголтууд.', '2015-11-03 13:14:59', '2015-11-03 13:14:59', 29, 'Хувьсагч яаж зарлах бэ?', NULL, '7'),
(15, 'For давталттай хичээлийн яаж хийх бэ? Хийсэн хшн байна уу? Бөөн алдаа гараад байна яах бэ?', '2015-11-17 15:21:40', '2015-11-17 15:21:40', 36, 'For давталт бичих хичээлийг яаж хийв?', NULL, '9'),
(16, 'ТОдорхой', '2016-01-07 13:42:58', '2016-01-07 13:42:58', 35, 'Яаж хувьсагч зарлах бэ?', NULL, '7'),
(17, 'Энэ бол жинхэнэ асуулт.', '2016-11-04 22:47:48', '2016-11-04 22:47:48', 59, 'Энэ бол жинхэнэ асуулт', 'skype-new-login-screen-linux.jpg', '7');

-- --------------------------------------------------------

--
-- Table structure for table `schema_migrations`
--

CREATE TABLE IF NOT EXISTS `schema_migrations` (
  `version` varchar(255) COLLATE utf8_unicode_ci NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

--
-- Dumping data for table `schema_migrations`
--

INSERT INTO `schema_migrations` (`version`) VALUES
('20151007132217'),
('20151007132309'),
('20151007132407'),
('20151007132539'),
('20151010111635'),
('20151010122639'),
('20151014015603'),
('20151014015946'),
('20151014102947'),
('20151014142545'),
('20151014160858'),
('20151015020455'),
('20151016035623'),
('20151016040153'),
('20151016040545'),
('20151016111032'),
('20151021134715'),
('20151021134944'),
('20151022003332'),
('20151022003705'),
('20151022120321'),
('20151022121513'),
('20151029081319'),
('20151029081520'),
('20151029082334'),
('20151029082650'),
('20151029082752'),
('20151031004700'),
('20151031004804'),
('20151031004922'),
('20151101082231'),
('20151101082626'),
('20151101143520'),
('20151102083454'),
('20151102092006'),
('20151102100240'),
('20151106060623'),
('20151108042017'),
('20151112122331');

-- --------------------------------------------------------

--
-- Table structure for table `students`
--

CREATE TABLE IF NOT EXISTS `students` (
  `id` int(11) NOT NULL,
  `fullname` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  `email` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  `username` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  `password` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  `picture` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  `location` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  `total_score` int(11) DEFAULT NULL,
  `about` text COLLATE utf8_unicode_ci,
  `last_code` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  `created_at` datetime DEFAULT NULL,
  `updated_at` datetime DEFAULT NULL,
  `social_id` int(11) DEFAULT NULL,
  `student_validate` tinyint(1) DEFAULT NULL
) ENGINE=InnoDB AUTO_INCREMENT=61 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

--
-- Dumping data for table `students`
--

INSERT INTO `students` (`id`, `fullname`, `email`, `username`, `password`, `picture`, `location`, `total_score`, `about`, `last_code`, `created_at`, `updated_at`, `social_id`, `student_validate`) VALUES
(2, 'Tsoodol', 'tsoodol_tse@yahoo.com', 'tsopro', '123', NULL, NULL, NULL, NULL, NULL, '2015-10-07 13:37:03', '2015-10-07 13:37:03', NULL, NULL),
(5, 'Admin', 'Admin@admin.mn', 'admin', 'admin', NULL, NULL, NULL, NULL, NULL, '2015-10-10 17:01:27', '2015-10-10 17:01:27', NULL, NULL),
(6, 'Мэргэн', 'merge@yahoo.com', 'mergen', '12345', NULL, NULL, NULL, NULL, NULL, '2015-10-16 03:37:51', '2015-10-16 03:37:51', NULL, NULL),
(7, 'Мядагмаа', 'myda@yahoo.com', 'myda', '808080', NULL, NULL, NULL, NULL, NULL, '2015-10-17 03:51:27', '2015-10-17 03:51:27', NULL, NULL),
(8, 'Мядагмаа', 'myda_ts@yahoo.com', 'mydats', '808080', NULL, NULL, NULL, NULL, NULL, '2015-10-17 03:54:50', '2015-10-17 03:54:50', NULL, NULL),
(9, 'Баярмагнай', 'bayraa@yahoo.com', 'coder', '12345', 'bayraa.jpeg', '2', NULL, ' Миний нэр бол баярааМиний нэр бол баярааМиний нэр бол баярааМиний нэр бол баярааМиний нэр бол баярааМиний нэр бол баярааМиний нэр бол баярааМиний нэр бол баярааМиний нэр бол баярааМиний нэр бол баяраа', NULL, '2015-10-22 13:24:00', '2015-10-25 06:13:10', NULL, NULL),
(11, 'Амаржаргал', 'jargal@yahoo.com', 'jargal', 'jargal123', NULL, NULL, NULL, NULL, NULL, '2015-10-24 02:37:37', '2015-10-24 02:37:37', NULL, NULL),
(12, 'Хорлоо', 'horloo@gmail.com', 'horol', '880088', 'Blah.png', '3', NULL, 'fdkhd fkhdkf k;hk;df h;dfk; kdfk k;dh;k dkh;k;fdhk;dhkdfmkh km;dhfdmk; mkh;df fd; ;hkmfd', NULL, '2015-10-25 07:02:06', '2015-10-25 07:05:06', NULL, NULL),
(13, 'Батжаргал', 'batjargal@yahoo.com', 'bataa', '007007', NULL, NULL, NULL, NULL, NULL, '2015-10-26 02:15:55', '2015-10-26 02:15:55', NULL, NULL),
(14, 'Rock ', 'rock@gmail.com', 'forestgump', '12345', 'batmna.jpg', '0', NULL, 'I''m student.', NULL, '2015-10-26 07:41:15', '2015-10-27 03:28:12', NULL, NULL),
(15, 'Kim No Hu', 'object@yahoo.com', 'username', 'password', 'testimonial2.jpg', '6', NULL, 'Password is good', NULL, '2015-10-27 11:15:58', '2015-10-27 16:18:44', NULL, NULL),
(16, 'Ship', 'ship@gmail.com', 'onion', '000000', NULL, NULL, NULL, NULL, NULL, '2015-10-27 16:41:19', '2015-10-27 16:41:19', NULL, NULL),
(17, 'Ducky', 'duck@yahoo.com', 'ducker', '12345', NULL, NULL, NULL, NULL, NULL, '2015-10-28 04:26:22', '2015-10-28 04:26:22', NULL, NULL),
(18, 'Войка', 'voika@yahoo.com', 'voika', '111111', 'profile.png', '0', NULL, 'Voika is fighter', NULL, '2015-10-29 15:36:47', '2015-10-31 03:52:56', NULL, NULL),
(19, 'Myagmar', 'mygmar@yahoo.com', 'mygmar', '888888', NULL, NULL, NULL, NULL, NULL, '2015-11-01 05:54:40', '2015-11-01 05:54:40', NULL, NULL),
(20, 'Mark', 'union@yahoo.com', 'mark', '444444', NULL, NULL, NULL, NULL, NULL, '2015-11-01 12:25:27', '2015-11-01 12:25:27', NULL, NULL),
(27, 'Tsoodol Tse', 'just@yahoo.com', 'Justify', '12345678', 'just.jpg', '1', NULL, 'Google is best host.  Google is best host. Google is best host.  Google is best host.  Google is best host. Google is best host. Google is best host. Google is best host. Google is best host. Google is best host. Google is best host.  Google', NULL, '2015-11-02 09:25:11', '2015-11-03 12:36:14', 5, NULL),
(28, 'Duckyman', 'man@yahoo.com', 'manny', '909090', NULL, NULL, NULL, NULL, NULL, '2015-11-02 09:26:42', '2015-11-02 09:26:42', NULL, NULL),
(29, 'D_Torres', 'torres@yahoo.com', 'torres', '080808', NULL, NULL, NULL, NULL, NULL, '2015-11-02 12:46:44', '2015-11-02 12:46:44', NULL, NULL),
(30, 'Бамбар', 'bambar@yahoo.com', 'bambar', '12345', 'Shawn_Tok_Profile.jpg', 'Орос', NULL, ' Ухаалаг Бамбаррууд Ухаалаг Бамбаррууд Ухаалаг Бамбаррууд Ухаалаг Бамбаррууд Ухаалаг Бамбаррууд Ухаалаг Бамбаррууд Ухаалаг Бамбаррууд Ухаалаг Бамбаррууд Ухаалаг Бамбаррууд Ухаалаг Бамбаррууд Ухаалаг Бамбаррууд Ухаалаг Бамбаррууд Ухаалаг Бамбаррууд ', NULL, '2015-11-03 14:21:22', '2015-11-11 10:53:35', NULL, NULL),
(31, 'Aaruul', 'eezgii@yahoo.mn', 'aaruul', '12345', NULL, NULL, NULL, NULL, NULL, '2015-11-06 02:05:18', '2015-11-06 02:05:18', NULL, NULL),
(32, 'Insane', 'barcode@yahoo.com', 'barcode', '12345', 'Opi51c7dccf270e0.png', 'Монгол', NULL, '', NULL, '2015-11-06 03:07:46', '2015-11-20 07:59:24', NULL, NULL),
(33, 'Tsoodol Tserendorj', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, '2015-11-12 13:04:25', '2015-11-12 13:04:25', 6, NULL),
(34, 'Tsoodol Tserendorj', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, '2015-11-12 13:09:39', '2015-11-12 13:09:39', 7, NULL),
(35, 'Tso', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, '2015-11-12 13:41:34', '2015-11-12 13:41:34', 8, NULL),
(36, 'Torres', 'torress@yahoo.com', 'torress', '12345', NULL, 'Англи', NULL, 'Мэргэжлийн хөлбөмбөгчин.', NULL, '2015-11-17 15:11:57', '2015-11-17 15:16:44', NULL, NULL),
(37, 'Social', 'social@gmail.com', 'social', '12345', NULL, NULL, NULL, NULL, NULL, '2015-11-20 08:25:58', '2015-11-20 08:25:58', NULL, NULL),
(38, 'meren', 'mergen_oktyabar@yahoo.com', 'meklek', '01041110', NULL, NULL, NULL, NULL, NULL, '2015-11-22 06:49:57', '2015-11-22 06:49:57', NULL, NULL),
(40, 'Just', 'Justin@yahoo.com', 'jerry', '12345', NULL, NULL, NULL, NULL, NULL, '2015-11-23 02:08:00', '2015-11-23 02:08:00', NULL, NULL),
(41, 'Flash', 'flash@yahoo.com', 'flash', '12345', NULL, NULL, NULL, NULL, NULL, '2015-11-23 02:34:33', '2015-11-23 02:34:33', NULL, NULL),
(42, 'VoikaOnion', 'voikaoino@yahoo.com', 'voika_onion', '12345', NULL, NULL, NULL, NULL, NULL, '2015-11-23 05:01:23', '2015-11-23 05:01:23', NULL, NULL),
(43, 'Honnny', 'hnhnhnhn@yhahoo.com', 'honyee', '12345', NULL, NULL, NULL, NULL, NULL, '2015-11-23 05:09:10', '2015-11-23 05:09:10', NULL, NULL),
(44, 'Register', 'register@yahoo.com', 'register', '12345', NULL, NULL, NULL, NULL, NULL, '2015-11-23 05:21:25', '2015-11-23 05:21:25', NULL, NULL),
(45, 'GOgooegoge', 'Goeogeooge@yahoo.com', 'osososoos', '12345', NULL, NULL, NULL, NULL, NULL, '2015-11-23 05:30:42', '2015-11-23 05:30:42', NULL, NULL),
(46, 'Super man', 'Quickman@yahoo.com', 'quickman', '12345', 'Shawn_Tok_Profile.jpg', 'Монгол', NULL, 'My name is Superman. I''m saving the world. I can do everything. World is everything on this world. ', NULL, '2015-11-23 13:45:11', '2015-11-23 13:46:59', NULL, NULL),
(47, 'Karnegi', 'karnegi@yahoo.com', 'carnegi', '12345', 'profile.jpg', 'Монгол', NULL, '', NULL, '2015-11-24 03:31:23', '2015-11-24 03:36:44', NULL, NULL),
(48, 'Bomba', 'bomba@yahoo.com', 'bomba', '12345', NULL, NULL, NULL, NULL, NULL, '2015-11-29 01:50:11', '2015-11-29 01:50:11', NULL, NULL),
(49, 'Tsoodol Tserendorj', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, '2015-11-30 16:41:43', '2015-11-30 16:41:43', 9, NULL),
(52, 'Tester', 'test@yahoo.com', 'tester', '12345', NULL, NULL, NULL, NULL, NULL, '2015-12-01 03:09:32', '2015-12-01 03:09:32', NULL, NULL),
(54, 'Student', 'student@yahoo.com', 'student', '12345', NULL, NULL, NULL, NULL, NULL, '2015-12-02 03:21:00', '2015-12-02 03:21:00', NULL, NULL),
(55, 'King', 'king@yahoo.com', 'king', '12345', 'profpic.jpg', 'Монгол', NULL, 'King is good name.', NULL, '2015-12-11 16:34:01', '2015-12-12 05:55:48', NULL, NULL),
(56, 'Diploma', 'diploma@yahoo.com', 'diploma', '12345', 'profilepicha.jpg', 'Монгол', NULL, '', NULL, '2015-12-22 15:11:22', '2015-12-22 15:15:02', NULL, NULL),
(57, 'code', 'code@yahoo.com', 'code', '12345', NULL, NULL, NULL, NULL, NULL, '2015-12-27 04:30:36', '2015-12-27 04:30:36', NULL, NULL),
(58, 'Tsoodol', 'world@yahoo.com', 'test', '12345', 'Frank_Lampard_1.jpg', 'Монгол', NULL, '', NULL, '2016-01-04 10:49:30', '2016-01-04 13:44:30', NULL, NULL),
(59, 'Tester', 'tester@yahoo.com', 'testman', 'testman', NULL, NULL, NULL, NULL, NULL, '2016-11-04 22:43:42', '2016-11-04 22:43:42', NULL, NULL),
(60, 'Batbayar', 'batbayar@yahoo.com', 'batushka', '123456789', NULL, NULL, NULL, NULL, NULL, '2016-11-14 12:50:02', '2016-11-14 12:50:02', NULL, NULL);

-- --------------------------------------------------------

--
-- Table structure for table `users`
--

CREATE TABLE IF NOT EXISTS `users` (
  `id` int(11) NOT NULL,
  `provider` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  `uid` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  `name` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  `image` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  `token` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  `expires_at` datetime DEFAULT NULL,
  `created_at` datetime DEFAULT NULL,
  `updated_at` datetime DEFAULT NULL
) ENGINE=InnoDB AUTO_INCREMENT=10 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

--
-- Dumping data for table `users`
--

INSERT INTO `users` (`id`, `provider`, `uid`, `name`, `image`, `token`, `expires_at`, `created_at`, `updated_at`) VALUES
(5, 'facebook', '489462307903216', 'Tsoodol Tse', 'http://graph.facebook.com/489462307903216/picture', 'CAACdUulDROMBALA8ORmP0qLZC4yr8x3mVLDVPk5UDDdyqaxrZCAriYvRsIpzYcZC4YOhz4Ut2Xwyw4g1ZBe73ZBxzMzqYm8cgxCMscLYy1oMK2MCxNaMW5BnYgbs9DNUqS7Sqg0dzCA6ijh7rvbSkZCLjWarCIrhKgDeMR42UZBZCtbtBpAts5LmqlY0qK8AVgzRTpuwC7uo9gZDZD', '2016-03-07 13:26:22', '2015-11-02 09:25:11', '2016-01-07 13:36:34'),
(7, 'google_oauth2', '106185401380011552121', 'Tsoodol Tserendorj', 'https://lh3.googleusercontent.com/-q2xbal1sRoY/AAAAAAAAAAI/AAAAAAAAAFM/DrzvGAhqGDk/photo.jpg', 'ya29.KgKftunpF4zWYCixCx53caZYpZxfcogUYjbe45YLLWwbG4ANNIRIpy1NEUzhcLFXL3oW', '2015-11-12 14:09:37', '2015-11-12 13:09:39', '2015-11-12 13:09:39'),
(8, 'github', '12014268', 'Tso', 'https://avatars.githubusercontent.com/u/12014268?v=3', 'f0d64c82564a3ad97e50dbc2b80153924e63703a', NULL, '2015-11-12 13:41:34', '2015-11-12 13:41:34'),
(9, 'google_oauth2', '107206197584341291163', 'Tsoodol Tserendorj', 'https://lh4.googleusercontent.com/-J7Wf820gZRQ/AAAAAAAAAAI/AAAAAAAAABY/lM8AhmuhtJI/photo.jpg', 'ya29.cQJJT1EntkdY5JXy0q5kDyszDXw_-0zqQyL3QAmazJ40mSjjT5lPRL0lEu9qmSOtPFGe', '2016-01-22 07:25:11', '2015-11-30 16:41:43', '2016-01-22 06:25:12');

--
-- Indexes for dumped tables
--

--
-- Indexes for table `answers`
--
ALTER TABLE `answers`
  ADD PRIMARY KEY (`id`), ADD KEY `index_answers_on_question_id` (`question_id`), ADD KEY `index_answers_on_student_id` (`student_id`);

--
-- Indexes for table `badges`
--
ALTER TABLE `badges`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `chapters`
--
ALTER TABLE `chapters`
  ADD PRIMARY KEY (`id`), ADD KEY `index_chapters_on_organizer_id` (`organizer_id`);

--
-- Indexes for table `completeds`
--
ALTER TABLE `completeds`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `glossaries`
--
ALTER TABLE `glossaries`
  ADD PRIMARY KEY (`id`), ADD KEY `index_glossaries_on_organizer_id` (`organizer_id`);

--
-- Indexes for table `instructions`
--
ALTER TABLE `instructions`
  ADD PRIMARY KEY (`id`), ADD KEY `index_instructions_on_lesson_id` (`lesson_id`);

--
-- Indexes for table `lessons`
--
ALTER TABLE `lessons`
  ADD PRIMARY KEY (`id`), ADD KEY `index_lessons_on_chapter_id` (`chapter_id`), ADD KEY `index_lessons_on_organizer_id` (`organizer_id`);

--
-- Indexes for table `media`
--
ALTER TABLE `media`
  ADD PRIMARY KEY (`id`), ADD KEY `index_media_on_organizer_id` (`organizer_id`);

--
-- Indexes for table `medias`
--
ALTER TABLE `medias`
  ADD PRIMARY KEY (`id`), ADD KEY `index_media_on_organizer_id` (`organizer_id`);

--
-- Indexes for table `organizers`
--
ALTER TABLE `organizers`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `questions`
--
ALTER TABLE `questions`
  ADD PRIMARY KEY (`id`), ADD KEY `index_questions_on_student_id` (`student_id`);

--
-- Indexes for table `schema_migrations`
--
ALTER TABLE `schema_migrations`
  ADD UNIQUE KEY `unique_schema_migrations` (`version`);

--
-- Indexes for table `students`
--
ALTER TABLE `students`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `users`
--
ALTER TABLE `users`
  ADD PRIMARY KEY (`id`);

--
-- AUTO_INCREMENT for dumped tables
--

--
-- AUTO_INCREMENT for table `answers`
--
ALTER TABLE `answers`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT,AUTO_INCREMENT=58;
--
-- AUTO_INCREMENT for table `badges`
--
ALTER TABLE `badges`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT,AUTO_INCREMENT=99;
--
-- AUTO_INCREMENT for table `chapters`
--
ALTER TABLE `chapters`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT,AUTO_INCREMENT=12;
--
-- AUTO_INCREMENT for table `completeds`
--
ALTER TABLE `completeds`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT,AUTO_INCREMENT=370;
--
-- AUTO_INCREMENT for table `glossaries`
--
ALTER TABLE `glossaries`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT,AUTO_INCREMENT=25;
--
-- AUTO_INCREMENT for table `instructions`
--
ALTER TABLE `instructions`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT,AUTO_INCREMENT=46;
--
-- AUTO_INCREMENT for table `lessons`
--
ALTER TABLE `lessons`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT,AUTO_INCREMENT=41;
--
-- AUTO_INCREMENT for table `media`
--
ALTER TABLE `media`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT;
--
-- AUTO_INCREMENT for table `medias`
--
ALTER TABLE `medias`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT,AUTO_INCREMENT=38;
--
-- AUTO_INCREMENT for table `organizers`
--
ALTER TABLE `organizers`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT,AUTO_INCREMENT=12;
--
-- AUTO_INCREMENT for table `questions`
--
ALTER TABLE `questions`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT,AUTO_INCREMENT=18;
--
-- AUTO_INCREMENT for table `students`
--
ALTER TABLE `students`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT,AUTO_INCREMENT=61;
--
-- AUTO_INCREMENT for table `users`
--
ALTER TABLE `users`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT,AUTO_INCREMENT=10;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
